var searchIndex = JSON.parse('{\
"api_routes":{"doc":"","t":[3,3,3,3,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Api","Introducer","LatestResp","MiniIndex","ROUTES","Search","SearchRepositoryReq","SearchRepositoryResp","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forges","from","from","from","from","from","from","from","get_latest","get_mini_index","into","into","into","into","into","into","into","introduce","introducer","latest","list","mini_index","query","repositories","repository","search","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["api_routes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,4,1,2,3,4,5,6,7,4,2,1,2,3,4,5,6,7,2,4,5,2,3,6,7,1,4,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[1]]]],[[],[[8,[2]]]],[[],[[8,[3]]]],[[],[[8,[4]]]],[[],[[8,[5]]]],[[],[[8,[6]]]],[[],[[8,[7]]]],[[1,1],9],[[2,2],9],[[3,3],9],[[4,4],9],[[5,5],9],[[6,6],9],[[7,7],9],[[1,10],11],[[2,10],11],[[3,10],11],[[4,10],11],[[5,10],11],[[6,10],11],[[7,10],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1,8],[2,8],[3,8],[4,8],[5,8],[6,8],[7,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12]],"p":[[3,"Search"],[3,"Introducer"],[3,"MiniIndex"],[3,"Api"],[3,"LatestResp"],[3,"SearchRepositoryReq"],[3,"SearchRepositoryResp"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"]]},\
"db_core":{"doc":"<code>Starchart</code> database operations","t":[3,3,8,3,3,4,2,13,3,8,3,3,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,10,10,10,10,12,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,10,12,12,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,11,11,11,11,11,11,11,11,10,10,12,12,12,0,12,10,0,12,12,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,10,12,12,12,12,12,23,6,4,13,6,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,16,8,8,8,8,16,10,10,10,5,5,5,5],"n":["AddRepository","AddUser","CloneSPDatabase","CreateForge","Forge","ForgeImplementation","GetConnection","Gitea","Repository","SCDatabase","Starchart","User","add_starchart_to_introducer","add_user","add_word_to_mini_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean_url","clone","clone","clone","clone","clone","clone","clone","clone","clone_db","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev","eq","eq","eq","eq","eq","eq","eq","eq","errors","export_mini_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forge_exists","forge_type","forge_type","forge_type_exists","from","from","from","from","from","from","from","from","from_str","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","into","into","into","into","into","into","into","into","is_starchart_imported","is_word_mini_indexed","last_crawl_on","name","name","ops","owner","ping","prelude","profile_photo","profile_photo","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","starchart_url","starchart_url","tags","tags","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","url","url","url","url","user_exists","username","username","username","website","website","async_trait","BoxDynError","DBError","DBError","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","UnknownForgeType","borrow","borrow_mut","fmt","fmt","from","into","provide","source","to_string","try_from","try_into","type_id","Conn","Connect","DBOps","GetConnection","Migrate","Pool","connect","get_conn","migrate","adding_forge_works","forge_type_exists_helper","instance_introducer_helper","mini_index_helper"],"q":["db_coredb_core::dev","db_core::errors","","","","","","","","","","","","","","","","","","","","","","","","db_core::ops","","","","","","","","","db_core::tests","","",""],"d":["add new repository to database","add new user to database","Trait to clone SCDatabase","create a new forge on the database","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","","Gitea softare forge","repository","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","user data","Add Starchart instance to introducer","add new user to database","Add word to mini index","","","","","","","","","","","","","","","","","Get url from URL Utility function for uniform url format","","","","","","","","","clone DB","","","","","","","","","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","","","","","","","","","useful imports for supporting a new database","","","","","","","","","represents all the ways a trait can fail using this crate","consolidate and export mini index","","","","","","","","","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert str to ForgeImplementation","Get all forges","Get all introduced Starchart instances","Get all repositories","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","repository name","repository name","meta operations like migration and connecting to a database","repository owner","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","","","","","","","","","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","Test utilities","","","","","","","","","Convert ForgeImplementation to str","","","","","","","","","","","","","","","","","","","","","","","","","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","repository website, if any","repository website, if any","","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","forge instance type is unknown","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","Get database connection","database migrations","database specific pool-type","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type run migrations","adding forge works","test if all forge type implementations are loaded into DB","test if all instance introducer methods work","test if all instance introducer methods work"],"i":[0,0,0,0,0,0,0,14,0,0,0,0,15,15,15,8,9,10,5,11,12,13,14,8,9,10,5,11,12,13,14,0,8,9,10,5,11,12,13,14,27,8,9,10,5,11,12,13,14,15,15,15,15,15,11,13,8,9,10,5,11,12,13,14,0,8,9,10,5,11,12,13,14,0,15,8,9,10,5,11,12,13,14,15,9,12,15,8,9,10,5,11,12,13,14,14,15,15,15,15,15,10,5,11,13,10,5,11,13,15,8,8,9,10,5,11,12,13,14,15,15,12,11,13,0,11,15,0,10,5,15,15,15,15,15,15,15,8,9,10,5,11,12,13,14,9,12,11,13,0,8,9,10,5,11,12,13,14,14,8,9,10,5,11,12,13,14,8,9,10,5,11,12,13,14,8,9,10,5,11,12,13,14,9,10,5,11,12,13,15,10,5,13,11,13,0,0,0,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,28,0,0,0,0,29,29,28,30,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,7],[8,8],[9,9],[10,10],[5,5],[11,11],[12,12],[13,13],[14,14],[[],[[3,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[4,[[3,[2]]]]]],[11,[[4,[[3,[2]]]]]],[1,[[4,[[3,[2]]]]]],[[6,6,1],[[4,[[3,[2]]]]]],[[6,1],[[4,[[3,[2]]]]]],0,0,[[],[[16,[8]]]],[[],[[16,[9]]]],[[],[[16,[10]]]],[[],[[16,[5]]]],[[],[[16,[11]]]],[[],[[16,[12]]]],[[],[[16,[13]]]],[[],[[16,[14]]]],0,[[8,8],17],[[9,9],17],[[10,10],17],[[5,5],17],[[11,11],17],[[12,12],17],[[13,13],17],[[14,14],17],0,[[],[[4,[[3,[2]]]]]],[[8,18],19],[[9,18],19],[[10,18],19],[[5,18],19],[[11,18],19],[[12,18],19],[[13,18],19],[[14,18],19],[1,[[4,[[3,[2]]]]]],0,0,[14,[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[20,[14]]]],[[17,21,21],[[4,[[3,[2]]]]]],[[21,21],[[4,[[3,[2]]]]]],[[21,21],[[4,[[3,[2]]]]]],[1,[[4,[[3,[2]]]]]],[[6,1],[[4,[[3,[2]]]]]],0,0,0,0,0,0,0,0,[[1,6],[[4,[[3,[2]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],0,0,0,0,0,[[],[[4,[[3,[2]]]]]],0,0,0,[1,[[4,[[3,[2]]]]]],[[6,6,1],[[4,[[3,[2]]]]]],[1,[[4,[[3,[2]]]]]],[1,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[8,16],[9,16],[10,16],[5,16],[11,16],[12,16],[13,16],[14,16],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,6],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,[[6,[23,[1]]],[[4,[[3,[2]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[24,18],19],[[24,18],19],[[]],[[]],[25],[24,[[23,[26]]]],[[],7],[[],16],[[],16],[[],22],0,0,0,0,0,0,[[],[[4,[[3,[2]]]]]],[[],[[4,[[3,[2]]]]]],[[],[[4,[[3,[2]]]]]],[[9,5,5,11]],[[]],[1],[[]]],"p":[[3,"Url"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"AddUser"],[15,"str"],[3,"String"],[3,"Starchart"],[3,"CreateForge"],[3,"User"],[3,"AddRepository"],[3,"Forge"],[3,"Repository"],[4,"ForgeImplementation"],[8,"SCDatabase"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"DBResult"],[15,"u32"],[3,"TypeId"],[4,"Option"],[4,"DBError"],[3,"Demand"],[8,"Error"],[8,"CloneSPDatabase"],[8,"GetConnection"],[8,"Connect"],[8,"Migrate"]]},\
"db_sqlx_sqlite":{"doc":"","t":[3,4,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,3,6,8,13,13,13,13,16,8,3,4,13,8,6,2,13,13,13,13,13,13,13,13,13,4,3,4,8,13,13,8,13,16,13,13,13,3,13,8,3,13,13,13,3,13,10,10,10,11,23,11,11,5,10,10,10,10,10,10,10,12,12,0,0,10,11,11,10,12,12,10,11,11,11,11,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,11,11,10,10,12,10,12,12,0,12,10,0,12,12,11,10,10,10,10,10,10,10,11,12,12,12,12,0,11,11,11,11,12,12,12,12,12,12,10,12,12,12,11,12,12,12,12,12,12,12,3,3,6,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,3,13,3,10,10,10,23,5,10,10,10,10,10,10,10,12,12,0,10,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,10,10,12,10,12,12,0,12,10,0,12,12,10,10,10,10,10,10,10,12,12,12,12,0,12,12,12,12,12,12,10,12,12,12,12,12,6,4,13,6,13,13,13,13,13,13,13,13,16,8,8,8,8,16,10,10,10,3,3,6,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,3,13,3,10,10,10,5,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,10,10,12,10,12,12,12,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,5,5,5,5,6,4,13,6,13,13,13,13,13,13,13,13,16,8,8,8,8,16,10,10,10,3,3,6,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,3,13,3,10,10,10,5,10,10,10,10,10,10,10,12,12,0,10,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,10,10,12,10,12,12,12,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,3,3,6,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,3,13,3,10,10,10,23,5,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,10,10,12,10,12,12,12,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,5,5,5,5,5,3,3,6,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,3,13,3,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,10,10,10,10,10,12,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,11,11,10,12,12,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,11,11,11,11,11,11,11,11,11,10,10,12,10,12,12,0,12,10,12,12,11,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,10,12,12,12,11,11,11,11,11,11,11,11,11,12,12,3,3,6,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,3,13,3,10,10,10,23,5,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,10,10,12,10,12,12,12,10,0,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,3,3,6,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,3,13,3,10,10,10,5,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,10,12,10,10,12,10,12,12,12,10,12,12,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,6,4,13,6,13,13,13,13,13,13,13,13,16,8,8,8,8,16,10,10,10,5,5,5,5],"n":["Conn","ConnectionOptions","Database","Existing","Fresh","Fresh","add_starchart_to_introducer","add_user","add_word_to_mini_index","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_db","clone_into","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","dev","errors","export_mini_index","forge_exists","forge_type_exists","from","from","from","from","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_forge","get_user","import_mini_index","into","into","into","into","is_starchart_imported","is_word_mini_indexed","migrate","ping","pool","pool_options","prelude","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","url","user_exists","vzip","vzip","vzip","vzip","AddRepository","AddUser","BoxDynError","CloneSPDatabase","ColumnDecode","ColumnIndexOutOfBounds","ColumnNotFound","Configuration","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","Database","Database","Decode","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Error","Forge","ForgeImplementation","GetConnection","Gitea","Io","Migrate","Migrate","Pool","PoolClosed","PoolTimedOut","Protocol","Repository","RowNotFound","SCDatabase","Starchart","Tls","TypeNotFound","UnknownForgeType","User","WorkerCrashed","add_starchart_to_introducer","add_user","add_word_to_mini_index","as_database_error","async_trait","borrow","borrow_mut","clean_url","clone_db","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","dev","errors","export_mini_index","fmt","fmt","forge_exists","forge_type","forge_type","forge_type_exists","from","from","from","from","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_conn","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","into","into_database_error","is_starchart_imported","is_word_mini_indexed","last_crawl_on","migrate","name","name","ops","owner","ping","prelude","profile_photo","profile_photo","provide","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","source","starchart_url","starchart_url","tags","tags","tests","to_string","try_from","try_into","type_id","url","url","url","url","url","url","user_exists","username","username","username","vzip","website","website","index","index","len","source","type_name","AddRepository","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","Starchart","UnknownForgeType","User","add_starchart_to_introducer","add_user","add_word_to_mini_index","async_trait","clean_url","clone_db","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","errors","export_mini_index","forge_exists","forge_type","forge_type","forge_type_exists","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_conn","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","is_starchart_imported","is_word_mini_indexed","last_crawl_on","migrate","name","name","ops","owner","ping","prelude","profile_photo","profile_photo","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","starchart_url","starchart_url","tags","tags","tests","url","url","url","url","url","url","user_exists","username","username","username","website","website","BoxDynError","DBError","DBError","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","UnknownForgeType","Conn","Connect","DBOps","GetConnection","Migrate","Pool","connect","get_conn","migrate","AddRepository","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","Starchart","UnknownForgeType","User","add_starchart_to_introducer","add_user","add_word_to_mini_index","clean_url","clone_db","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","export_mini_index","forge_exists","forge_type","forge_type","forge_type_exists","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_conn","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","is_starchart_imported","is_word_mini_indexed","last_crawl_on","migrate","name","name","owner","ping","profile_photo","profile_photo","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","starchart_url","starchart_url","tags","tags","url","url","url","url","url","url","user_exists","username","username","username","website","website","adding_forge_works","forge_type_exists_helper","instance_introducer_helper","mini_index_helper","BoxDynError","DBError","DBError","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","UnknownForgeType","Conn","Connect","DBOps","GetConnection","Migrate","Pool","connect","get_conn","migrate","AddRepository","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","Starchart","UnknownForgeType","User","add_starchart_to_introducer","add_user","add_word_to_mini_index","clean_url","clone_db","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","dev","export_mini_index","forge_exists","forge_type","forge_type","forge_type_exists","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_conn","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","is_starchart_imported","is_word_mini_indexed","last_crawl_on","migrate","name","name","owner","ping","profile_photo","profile_photo","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","starchart_url","starchart_url","tags","tags","url","url","url","url","url","url","user_exists","username","username","username","website","website","AddRepository","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","Starchart","UnknownForgeType","User","add_starchart_to_introducer","add_user","add_word_to_mini_index","async_trait","clean_url","clone_db","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","export_mini_index","forge_exists","forge_type","forge_type","forge_type_exists","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_conn","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","is_starchart_imported","is_word_mini_indexed","last_crawl_on","migrate","name","name","owner","ping","profile_photo","profile_photo","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","starchart_url","starchart_url","tags","tags","url","url","url","url","url","url","user_exists","username","username","username","website","website","adding_forge_works","forge_type_exists_helper","instance_introducer_helper","mini_index_helper","map_register_err","AddRepository","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","Starchart","UnknownForgeType","User","add_starchart_to_introducer","add_user","add_word_to_mini_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean_url","clone","clone","clone","clone","clone","clone","clone","clone","clone_db","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","errors","export_mini_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forge_exists","forge_type","forge_type","forge_type_exists","from","from","from","from","from","from","from","from","from","from_str","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_conn","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","into","into","into","into","into","into","into","into","into","is_starchart_imported","is_word_mini_indexed","last_crawl_on","migrate","name","name","ops","owner","ping","profile_photo","profile_photo","provide","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","starchart_url","starchart_url","tags","tags","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","url","url","url","url","user_exists","username","username","username","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","website","website","AddRepository","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","Starchart","UnknownForgeType","User","add_starchart_to_introducer","add_user","add_word_to_mini_index","async_trait","clean_url","clone_db","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","export_mini_index","forge_exists","forge_type","forge_type","forge_type_exists","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_conn","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","is_starchart_imported","is_word_mini_indexed","last_crawl_on","migrate","name","name","owner","ping","prelude","profile_photo","profile_photo","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","starchart_url","starchart_url","tags","tags","url","url","url","url","url","url","user_exists","username","username","username","website","website","AddRepository","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","Starchart","UnknownForgeType","User","add_starchart_to_introducer","add_user","add_word_to_mini_index","clean_url","clone_db","connect","create_forge_instance","create_repository","delete_forge_instance","delete_repository","delete_user","description","description","export_mini_index","forge_exists","forge_type","forge_type","forge_type_exists","get_all_forges","get_all_introduced_starchart_instances","get_all_repositories","get_conn","get_forge","get_user","html_link","html_link","html_link","html_url","import","import","import","import","import_mini_index","instance_url","is_starchart_imported","is_word_mini_indexed","last_crawl_on","migrate","name","name","owner","ping","profile_photo","profile_photo","record_starchart_imports","repository_exists","rm_imported_mini_index","rm_starchart_import","rm_word_from_mini_index","search_mini_index","search_repository","starchart_url","starchart_url","tags","tags","url","url","url","url","url","url","user_exists","username","username","username","website","website","BoxDynError","DBError","DBError","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","UnknownForgeType","Conn","Connect","DBOps","GetConnection","Migrate","Pool","connect","get_conn","migrate","adding_forge_works","forge_type_exists_helper","instance_introducer_helper","mini_index_helper"],"q":["db_sqlx_sqlite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::Error","","","","","db_sqlx_sqlite::dev::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev::errors","","","","","","","","","","","","db_sqlx_sqlite::dev::dev::ops","","","","","","","","","db_sqlx_sqlite::dev::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev::tests","","","","db_sqlx_sqlite::dev::errors","","","","","","","","","","","","db_sqlx_sqlite::dev::ops","","","","","","","","","db_sqlx_sqlite::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::tests","","","","db_sqlx_sqlite::errors","db_sqlx_sqlite::preludedb_sqlx_sqlite::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::errors","","","","","","","","","","","","db_sqlx_sqlite::prelude::ops","","","","","","","","","db_sqlx_sqlite::prelude::tests","","",""],"d":["Use an existing database pool","Connect to databse","","existing connection","","fresh connection","Add Starchart instance to introducer","add new user to database","Add word to mini index","","","","","","","","","","","","","create forge instance DB","add new repository to database.","delete forge instance","delete repository","delete user","","","consolidate and export mini index","check if a forge instance exists","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get all forges","Get all introduced Starchart instances","Get all repositories","get forge instance data","get user data","Import mini-index","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if Starchart instance is imported","Check if word exists in mini index","","ping DB","","","","Mark a Starchart instance as imported","check if a repo exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","","","","","","","","","","","","","","","check if an user exists. When url of a forge instace is …","","","","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","Error occurred while decoding a value from a specific …","Column index was out of bounds.","No column found for the given name.","Error occurred while parsing a connection string.","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","","Error returned from the database.","Error occurred while decoding a value.","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","Represents all the ways a method can fail within SQLx.","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","Error communicating with the database backend.","database migrations","","database specific pool-type","<code>Pool::close</code> was called while we were waiting in …","A <code>Pool::acquire</code> timed out due to connections not becoming …","Unexpected or invalid data encountered while communicating …","repository","No rows returned by a query that expected to return at …","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","Error occurred while attempting to establish a TLS …","Type in query doesn’t exist. Likely due to typo or …","forge instance type is unknown","user data","A background worker has crashed.","Add Starchart instance to introducer","add new user to database","Add word to mini index","","","","","Get url from URL Utility function for uniform url format","clone DB","database specific error-type create connection pool","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","useful imports for supporting a new database","represents all the ways a trait can fail using this crate","consolidate and export mini index","","","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","","Returns the argument unchanged.","","","Get all forges","Get all introduced Starchart instances","Get all repositories","database specific error-type get connection from …","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Calls <code>U::from(self)</code>.","","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","database specific error-type run migrations","repository name","repository name","meta operations like migration and connecting to a database","repository owner","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","Test utilities","","","","","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","","repository website, if any","repository website, if any","","","","","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","forge instance type is unknown","user data","Add Starchart instance to introducer","add new user to database","Add word to mini index","","Get url from URL Utility function for uniform url format","clone DB","database specific error-type create connection pool","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","represents all the ways a trait can fail using this crate","consolidate and export mini index","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all forges","Get all introduced Starchart instances","Get all repositories","database specific error-type get connection from …","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","database specific error-type run migrations","repository name","repository name","meta operations like migration and connecting to a database","repository owner","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","Test utilities","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","repository website, if any","repository website, if any","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","forge instance type is unknown","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","Get database connection","database migrations","database specific pool-type","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type run migrations","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","forge instance type is unknown","user data","Add Starchart instance to introducer","add new user to database","Add word to mini index","Get url from URL Utility function for uniform url format","clone DB","database specific error-type create connection pool","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","consolidate and export mini index","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all forges","Get all introduced Starchart instances","Get all repositories","database specific error-type get connection from …","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","repository website, if any","repository website, if any","adding forge works","test if all forge type implementations are loaded into DB","test if all instance introducer methods work","test if all instance introducer methods work","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","forge instance type is unknown","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","Get database connection","database migrations","database specific pool-type","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type run migrations","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","forge instance type is unknown","user data","Add Starchart instance to introducer","add new user to database","Add word to mini index","Get url from URL Utility function for uniform url format","clone DB","database specific error-type create connection pool","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","useful imports for supporting a new database","consolidate and export mini index","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all forges","Get all introduced Starchart instances","Get all repositories","database specific error-type get connection from …","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","repository website, if any","repository website, if any","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","forge instance type is unknown","user data","Add Starchart instance to introducer","add new user to database","Add word to mini index","","Get url from URL Utility function for uniform url format","clone DB","database specific error-type create connection pool","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","consolidate and export mini index","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all forges","Get all introduced Starchart instances","Get all repositories","database specific error-type get connection from …","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","repository website, if any","repository website, if any","adding forge works","test if all forge type implementations are loaded into DB","test if all instance introducer methods work","test if all instance introducer methods work","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","forge instance type is unknown","user data","Add Starchart instance to introducer","add new user to database","Add word to mini index","","","","","","","","","","","","","","","","","","","Get url from URL Utility function for uniform url format","","","","","","","","","clone DB","","","","","","","","","database specific error-type create connection pool","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","","","","","","","","","useful imports for supporting a new database","","","","","","","","","","","","","","","","","represents all the ways a trait can fail using this crate","consolidate and export mini index","","","","","","","","","","","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert str to ForgeImplementation","Get all forges","Get all introduced Starchart instances","Get all repositories","database specific error-type get connection from …","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","database specific error-type run migrations","repository name","repository name","meta operations like migration and connecting to a database","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","","","","","","","","","","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","Test utilities","","","","","","","","","Convert ForgeImplementation to str","","","","","","","","","","","","","","","","","","","","","","","","","","","","","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","","","","","","","","","","repository website, if any","repository website, if any","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","forge instance type is unknown","user data","Add Starchart instance to introducer","add new user to database","Add word to mini index","","Get url from URL Utility function for uniform url format","clone DB","database specific error-type create connection pool","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","consolidate and export mini index","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all forges","Get all introduced Starchart instances","Get all repositories","database specific error-type get connection from …","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","repository website, if any","repository website, if any","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","Data related to a Starchart instance","forge instance type is unknown","user data","Add Starchart instance to introducer","add new user to database","Add word to mini index","Get url from URL Utility function for uniform url format","clone DB","database specific error-type create connection pool","create forge instance","add new repository to database.","delete forge instance","delete repository","delete user","repository description, if any","repository description, if any","consolidate and export mini index","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all forges","Get all introduced Starchart instances","Get all repositories","database specific error-type get connection from …","get forge instance data","get user data","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","is this user an import","is this user an import","is this repository an import","is this repository an import","Import mini-index","URL of the Starchart instance","Check if Starchart instance is imported","Check if word exists in mini index","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","Mark a Starchart instance as imported","check if a repository exists.","Delete imported mini-index","Unmark a Starchart instance as imported","Remove word from mini index","Search mini index","Search all repositories","url of the Starchart instance None = local instance Some(&amp;…","url of the Starchart instance None = local instance Some(&amp;…","repository topic tags","repository topic tags","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","url of the forge","url of the forge instance: with scheme but remove trailing …","check if an user exists. When url of a forge instance is …","username of the user","username of the user","repository owner","repository website, if any","repository website, if any","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","forge instance type is unknown","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","Get database connection","database migrations","database specific pool-type","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type run migrations","adding forge works","test if all forge type implementations are loaded into DB","test if all instance introducer methods work","test if all instance introducer methods work"],"i":[0,0,0,10,0,10,1,1,1,33,10,34,1,33,10,34,1,1,1,1,10,1,1,1,1,1,0,0,1,1,1,33,10,34,1,1,1,1,1,1,1,33,10,34,1,1,1,1,1,1,34,0,1,1,1,1,1,1,1,1,33,10,34,1,33,10,34,1,33,10,34,1,34,1,33,10,34,1,0,0,0,0,19,19,19,19,35,0,0,0,28,0,0,0,19,19,28,28,28,28,28,28,28,0,0,0,0,13,19,0,19,36,19,19,19,0,19,0,0,19,19,28,0,19,8,8,8,19,0,19,19,0,37,36,8,8,8,8,8,12,32,0,0,8,19,19,8,11,31,8,19,19,19,19,8,8,8,35,8,8,30,6,12,32,30,6,12,32,8,29,19,19,8,8,31,38,12,32,0,12,8,0,30,6,19,8,8,8,8,8,8,8,19,11,31,12,32,0,19,19,19,19,11,30,6,12,31,32,8,30,6,32,19,12,32,39,40,39,40,41,0,0,0,0,35,0,0,0,28,0,0,28,28,28,28,28,28,28,0,0,0,13,0,36,0,0,0,28,0,8,8,8,0,0,37,36,8,8,8,8,8,12,32,0,8,8,11,31,8,8,8,8,35,8,8,30,6,12,32,30,6,12,32,8,29,8,8,31,38,12,32,0,12,8,0,30,6,8,8,8,8,8,8,8,11,31,12,32,0,11,30,6,12,31,32,8,30,6,32,12,32,0,0,28,0,28,28,28,28,28,28,28,28,35,0,0,0,0,36,36,35,38,0,0,0,0,35,0,0,0,28,0,0,28,28,28,28,28,28,28,0,0,0,13,0,36,0,0,0,28,0,8,8,8,0,37,36,8,8,8,8,8,12,32,8,8,11,31,8,8,8,8,35,8,8,30,6,12,32,30,6,12,32,8,29,8,8,31,38,12,32,12,8,30,6,8,8,8,8,8,8,8,11,31,12,32,11,30,6,12,31,32,8,30,6,32,12,32,0,0,0,0,0,0,28,0,28,28,28,28,28,28,28,28,35,0,0,0,0,36,36,35,38,0,0,0,0,35,0,0,0,28,0,0,28,28,28,28,28,28,28,0,0,0,13,0,36,0,0,0,28,0,8,8,8,0,37,36,8,8,8,8,8,12,32,0,8,8,11,31,8,8,8,8,35,8,8,30,6,12,32,30,6,12,32,8,29,8,8,31,38,12,32,12,8,30,6,8,8,8,8,8,8,8,11,31,12,32,11,30,6,12,31,32,8,30,6,32,12,32,0,0,0,0,35,0,0,0,28,0,0,28,28,28,28,28,28,28,0,0,0,13,0,36,0,0,0,28,0,8,8,8,0,0,37,36,8,8,8,8,8,12,32,8,8,11,31,8,8,8,8,35,8,8,30,6,12,32,30,6,12,32,8,29,8,8,31,38,12,32,12,8,30,6,8,8,8,8,8,8,8,11,31,12,32,11,30,6,12,31,32,8,30,6,32,12,32,0,0,0,0,0,0,0,0,0,35,0,0,0,28,0,0,28,28,28,28,28,28,28,0,0,0,13,0,36,0,0,0,28,0,8,8,8,28,29,11,30,6,12,31,32,13,28,29,11,30,6,12,31,32,13,0,29,11,30,6,12,31,32,13,37,29,11,30,6,12,31,32,13,36,8,8,8,8,8,12,32,29,11,30,6,12,31,32,13,0,29,11,30,6,12,31,32,13,29,11,30,6,12,31,32,13,0,8,28,28,29,11,30,6,12,31,32,13,8,11,31,8,28,29,11,30,6,12,31,32,13,13,8,8,8,35,8,8,30,6,12,32,30,6,12,32,8,29,28,29,11,30,6,12,31,32,13,8,8,31,38,12,32,0,12,8,30,6,28,8,8,8,8,8,8,8,29,11,30,6,12,31,32,13,28,11,31,12,32,0,29,11,30,6,12,31,32,13,13,28,28,29,11,30,6,12,31,32,13,28,29,11,30,6,12,31,32,13,28,29,11,30,6,12,31,32,13,11,30,6,12,31,32,8,30,6,32,28,29,11,30,6,12,31,32,13,12,32,0,0,0,0,35,0,0,0,28,0,0,28,28,28,28,28,28,28,0,0,0,13,0,36,0,0,0,28,0,8,8,8,0,0,37,36,8,8,8,8,8,12,32,8,8,11,31,8,8,8,8,35,8,8,30,6,12,32,30,6,12,32,8,29,8,8,31,38,12,32,12,8,0,30,6,8,8,8,8,8,8,8,11,31,12,32,11,30,6,12,31,32,8,30,6,32,12,32,0,0,0,0,35,0,0,0,28,0,0,28,28,28,28,28,28,28,0,0,0,13,0,36,0,0,0,28,0,8,8,8,0,37,36,8,8,8,8,8,12,32,8,8,11,31,8,8,8,8,35,8,8,30,6,12,32,30,6,12,32,8,29,8,8,31,38,12,32,12,8,30,6,8,8,8,8,8,8,8,11,31,12,32,11,30,6,12,31,32,8,30,6,32,12,32,0,0,28,0,28,28,28,28,28,28,28,28,35,0,0,0,0,36,36,35,38,0,0,0,0],"f":[0,0,0,0,0,0,[[1,2],[[5,[[4,[3]]]]]],[[1,6],[[5,[[4,[3]]]]]],[[1,7],[[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[],[[4,[8,9]]]],[[]],[10,[[5,[[4,[3]]]]]],[[1,11],[[5,[[4,[3]]]]]],[[1,12],[[5,[[4,[3]]]]]],[[1,2],[[5,[[4,[3]]]]]],[[1,7,7,2],[[5,[[4,[3]]]]]],[[1,7,2],[[5,[[4,[3]]]]]],0,0,[1,[[5,[[4,[3]]]]]],[[1,2],[[5,[[4,[3]]]]]],[[1,13],[[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[[1,14,15,15],[[5,[[4,[3]]]]]],[[1,15,15],[[5,[[4,[3]]]]]],[[1,15,15],[[5,[[4,[3]]]]]],[[1,2],[[5,[[4,[3]]]]]],[[1,7,2],[[5,[[4,[3]]]]]],[[1,2,7],[[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[[1,2],[[5,[[4,[3]]]]]],[[1,7],[[5,[[4,[3]]]]]],[1,[[5,[[4,[3]]]]]],[1,[[5,[[4,[3]]]]]],0,0,0,[[1,2],[[5,[[4,[3]]]]]],[[1,7,7,2],[[5,[[4,[3]]]]]],[[1,2],[[5,[[4,[3]]]]]],[[1,2],[[5,[[4,[3]]]]]],[[1,7],[[5,[[4,[3]]]]]],[[1,7],[[5,[[4,[3]]]]]],[[1,7],[[5,[[4,[3]]]]]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],0,[[1,7,[18,[2]]],[[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[5,[[4,[3,9]]]]]],[6,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[19,[[18,[20]]]],0,[[]],[[]],[2,21],[[],[[4,[8,9]]]],[[],[[5,[[4,[3,9]]]]]],[11,[[5,[[4,[3,9]]]]]],[12,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,[[],[[5,[[4,[3,9]]]]]],[[19,22],[[16,[23]]]],[[19,22],[[16,[23]]]],[2,[[5,[[4,[3,9]]]]]],0,0,[13,[[5,[[4,[3,9]]]]]],[[],19],[[]],[24,19],[25,19],[[14,15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,[[2,7],[[5,[[4,[3,9]]]]]],0,[[]],[19,[[18,[[4,[20,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[[],[[5,[[4,[3,9]]]]]],0,0,0,0,[[],[[5,[[4,[3,9]]]]]],0,0,0,[26],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[19,[[18,[27]]]],0,0,0,0,0,[[],21],[[],16],[[],16],[[],17],0,0,0,0,0,0,[[7,[18,[2]]],[[5,[[4,[3,9]]]]]],0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[5,[[4,[3,9]]]]]],[6,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[2,21],[[],[[4,[8,9]]]],[[],[[5,[[4,[3,9]]]]]],[11,[[5,[[4,[3,9]]]]]],[12,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],0,0,[13,[[5,[[4,[3,9]]]]]],[[14,15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,[[2,7],[[5,[[4,[3,9]]]]]],0,[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[[],[[5,[[4,[3,9]]]]]],0,0,0,0,[[],[[5,[[4,[3,9]]]]]],0,0,0,[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[7,[18,[2]]],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[5,[[4,[3,9]]]]]],[6,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[2,21],[[],[[4,[8,9]]]],[[],[[5,[[4,[3,9]]]]]],[11,[[5,[[4,[3,9]]]]]],[12,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],0,0,[13,[[5,[[4,[3,9]]]]]],[[14,15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,[[2,7],[[5,[[4,[3,9]]]]]],0,[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[[],[[5,[[4,[3,9]]]]]],0,0,0,[[],[[5,[[4,[3,9]]]]]],0,0,[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,[[7,[18,[2]]],[[5,[[4,[3,9]]]]]],0,0,0,0,0,[[11,6,6,12],3],[[],3],[2,3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[5,[[4,[3,9]]]]]],[6,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[2,21],[[],[[4,[8,9]]]],[[],[[5,[[4,[3,9]]]]]],[11,[[5,[[4,[3,9]]]]]],[12,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],0,0,[13,[[5,[[4,[3,9]]]]]],[[14,15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,[[2,7],[[5,[[4,[3,9]]]]]],0,[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[[],[[5,[[4,[3,9]]]]]],0,0,0,[[],[[5,[[4,[3,9]]]]]],0,0,[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,[[7,[18,[2]]],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[5,[[4,[3,9]]]]]],[6,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[2,21],[[],[[4,[8,9]]]],[[],[[5,[[4,[3,9]]]]]],[11,[[5,[[4,[3,9]]]]]],[12,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],0,0,[13,[[5,[[4,[3,9]]]]]],[[14,15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,[[2,7],[[5,[[4,[3,9]]]]]],0,[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[[],[[5,[[4,[3,9]]]]]],0,0,0,[[],[[5,[[4,[3,9]]]]]],0,0,[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,[[7,[18,[2]]],[[5,[[4,[3,9]]]]]],0,0,0,0,0,[[11,6,6,12],3],[[],3],[2,3],[[],3],[19,28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[5,[[4,[3,9]]]]]],[6,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,21],[29,29],[11,11],[30,30],[6,6],[12,12],[31,31],[32,32],[13,13],[[],[[4,[8,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[4,[3,9]]]]]],[11,[[5,[[4,[3,9]]]]]],[12,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,[[],[[16,[29]]]],[[],[[16,[11]]]],[[],[[16,[30]]]],[[],[[16,[6]]]],[[],[[16,[12]]]],[[],[[16,[31]]]],[[],[[16,[32]]]],[[],[[16,[13]]]],0,[[29,29],14],[[11,11],14],[[30,30],14],[[6,6],14],[[12,12],14],[[31,31],14],[[32,32],14],[[13,13],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[],[[5,[[4,[3,9]]]]]],[[28,22],[[16,[23]]]],[[28,22],[[16,[23]]]],[[29,22],[[16,[23]]]],[[11,22],[[16,[23]]]],[[30,22],[[16,[23]]]],[[6,22],[[16,[23]]]],[[12,22],[[16,[23]]]],[[31,22],[[16,[23]]]],[[32,22],[[16,[23]]]],[[13,22],[[16,[23]]]],[2,[[5,[[4,[3,9]]]]]],0,0,[13,[[5,[[4,[3,9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,[[16,[13,28]]]],[[14,15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,[[2,7],[[5,[[4,[3,9]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[[],[[5,[[4,[3,9]]]]]],0,0,0,0,[[],[[5,[[4,[3,9]]]]]],0,0,[26],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[29,16],[11,16],[30,16],[6,16],[12,16],[31,16],[32,16],[13,16],[28,[[18,[27]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,7],[[],21],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,0,0,0,[[7,[18,[2]]],[[5,[[4,[3,9]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[5,[[4,[3,9]]]]]],[6,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[2,21],[[],[[4,[8,9]]]],[[],[[5,[[4,[3,9]]]]]],[11,[[5,[[4,[3,9]]]]]],[12,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],0,0,[13,[[5,[[4,[3,9]]]]]],[[14,15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,[[2,7],[[5,[[4,[3,9]]]]]],0,[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[[],[[5,[[4,[3,9]]]]]],0,0,0,[[],[[5,[[4,[3,9]]]]]],0,0,0,[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,[[7,[18,[2]]],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[5,[[4,[3,9]]]]]],[6,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[2,21],[[],[[4,[8,9]]]],[[],[[5,[[4,[3,9]]]]]],[11,[[5,[[4,[3,9]]]]]],[12,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],0,0,[13,[[5,[[4,[3,9]]]]]],[[14,15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[15,15],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[[7,2],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,[[2,7],[[5,[[4,[3,9]]]]]],0,[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,[[],[[5,[[4,[3,9]]]]]],0,0,0,[[],[[5,[[4,[3,9]]]]]],0,0,[2,[[5,[[4,[3,9]]]]]],[[7,7,2],[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[2,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],[7,[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,[[7,[18,[2]]],[[5,[[4,[3,9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[[],[[5,[[4,[3,9]]]]]],[[11,6,6,12],3],[[],3],[2,3],[[],3]],"p":[[3,"Database"],[3,"Url"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"AddUser"],[15,"str"],[8,"SCDatabase"],[3,"Global"],[4,"ConnectionOptions"],[3,"CreateForge"],[3,"AddRepository"],[4,"ForgeImplementation"],[15,"bool"],[15,"u32"],[4,"Result"],[3,"TypeId"],[4,"Option"],[4,"Error"],[8,"DatabaseError"],[3,"String"],[3,"Formatter"],[3,"Error"],[4,"MigrateError"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"DBError"],[3,"Starchart"],[3,"User"],[3,"Forge"],[3,"Repository"],[3,"Conn"],[3,"Fresh"],[8,"GetConnection"],[8,"Connect"],[8,"CloneSPDatabase"],[8,"Migrate"],[13,"ColumnIndexOutOfBounds"],[13,"ColumnDecode"],[13,"TypeNotFound"]]},\
"federate_core":{"doc":"","t":[3,16,8,3,3,3,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,5,12,12,10,11,11,11,11,11,11,11,12,12,12,10,11,12,12,12,12,12,10,10,12,11,11,11,11,11,11,11,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5],"n":["Api","Error","Federate","Introducer","LatestResp","MiniIndex","ROUTES","Search","SearchRepositoryReq","SearchRepositoryResp","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_dir_if_not_exists","create_forge_instance","create_repository","create_user","delete_forge_instance","delete_repository","delete_user","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forge_exists","forges","from","from","from","from","from","from","from","get_hostname","get_latest","get_mini_index","import","into","into","into","into","into","into","into","introduce","introducer","latest","latest_tar","latest_tar_json","list","mini_index","query","repositories","repository","repository_exists","rm_util","search","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tar","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_exists","adding_forge_works"],"q":["federate_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","federate_core::tests"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","utility method to create dir if not exists","create forge instance","add repository instance","create user instance","delete forge instance","delete repository","delete user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check if a forge instance exists","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","import archive from another Starchart instance","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","get latest tar ball","","","","","","","check if a repository exists.","utility method to remove file/dir","","","","","","","","","publish results in tar ball","Test utilities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check if an user exists.","adding forge works"],"i":[0,23,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,23,23,23,23,23,23,23,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,23,4,1,2,3,4,5,6,7,0,4,2,23,1,2,3,4,5,6,7,2,4,5,23,23,2,3,6,7,1,23,23,4,1,2,3,4,5,6,7,23,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,23,0],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[11,[[10,[9]]]]]],[12,[[11,[[10,[9]]]]]],[13,[[11,[[10,[9]]]]]],[14,[[11,[[10,[9]]]]]],[15,[[11,[[10,[9]]]]]],[[16,16,15],[[11,[[10,[9]]]]]],[[16,15],[[11,[[10,[9]]]]]],[[],[[17,[1]]]],[[],[[17,[2]]]],[[],[[17,[3]]]],[[],[[17,[4]]]],[[],[[17,[5]]]],[[],[[17,[6]]]],[[],[[17,[7]]]],[[1,1],18],[[2,2],18],[[3,3],18],[[4,4],18],[[5,5],18],[[6,6],18],[[7,7],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[1,19],[[17,[20]]]],[[2,19],[[17,[20]]]],[[3,19],[[17,[20]]]],[[4,19],[[17,[20]]]],[[5,19],[[17,[20]]]],[[6,19],[[17,[20]]]],[[7,19],[[17,[20]]]],[15,[[11,[[10,[9]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,16],0,0,[[15,21,10],[[11,[[10,[9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],[[11,[[10,[9]]]]]],[[],[[11,[[10,[9]]]]]],0,0,0,0,0,[[16,16,15],[[11,[[10,[9]]]]]],[8,[[11,[[10,[9]]]]]],0,[1,17],[2,17],[3,17],[4,17],[5,17],[6,17],[7,17],[[],[[11,[[10,[9]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[16,15],[[11,[[10,[9]]]]]],[[12,14,13]]],"p":[[3,"Search"],[3,"Introducer"],[3,"MiniIndex"],[3,"Api"],[3,"LatestResp"],[3,"SearchRepositoryReq"],[3,"SearchRepositoryResp"],[3,"Path"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"CreateForge"],[3,"AddRepository"],[3,"AddUser"],[3,"Url"],[15,"str"],[4,"Result"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"Client"],[3,"TypeId"],[8,"Federate"]]},\
"forge_core":{"doc":"","t":[8,3,6,3,8,6,3,6,11,11,11,11,11,11,11,11,10,11,11,10,12,0,11,11,10,11,11,11,10,12,12,11,11,11,10,12,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,23,2,23],"n":["CloneSPForge","CrawlResp","Repositories","Repository","SCForge","Tags","User","UserMap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_forge","clone_into","clone_into","crawl","description","dev","fmt","fmt","forge_type","from","from","from","get_url","html_link","html_link","into","into","into","is_forge","name","owner","prelude","profile_photo","repos","tags","tags","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","url","username","users","website","async_trait","db_core","async_trait"],"q":["forge_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","forge_core::dev","","forge_core::prelude"],"d":["Trait to clone SCForge","","","add new repository to database","","","","","","","","","","","","","clone Forge","","","","repository description, if any","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","html link to the user profile","html link to the repository","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","repository name","repository owner","","OPTIONAL: html link to the user’s profile photo","","","repository topic tags","","","","","","","","","","","","url of the forge instance: with scheme but remove trailing …","url of the forge instance: with scheme but remove trailing …","username of the user","","repository website, if any","","",""],"i":[0,0,0,0,0,0,0,0,14,1,2,14,1,2,1,2,15,1,2,3,2,0,1,2,3,14,1,2,3,1,2,14,1,2,3,2,2,0,1,14,14,2,1,2,14,1,2,14,1,2,14,1,2,1,2,1,14,2,0,0,0],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[],[[4,[3]]]],[[]],[[]],[[5,5,5],[[7,[[4,[6]]]]]],0,0,[[1,8],9],[[2,8],9],[[],10],[[]],[[]],[[]],[[],11],0,0,[[]],[[]],[[]],[[],[[7,[[4,[6]]]]]],0,0,0,0,0,0,0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0],"p":[[3,"User"],[3,"Repository"],[8,"SCForge"],[3,"Box"],[15,"u64"],[8,"Future"],[3,"Pin"],[3,"Formatter"],[6,"Result"],[4,"ForgeImplementation"],[3,"Url"],[4,"Result"],[3,"TypeId"],[3,"CrawlResp"],[8,"CloneSPForge"]]},\
"gitea":{"doc":"","t":[3,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,0,11,11,11,11,13,3,13,3,13,4,13,3,3,3,3,3,3,13,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,12,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12],"n":["Gitea","borrow","borrow_mut","client","clone","clone_forge","clone_into","crawl","eq","forge_type","from","get_url","instance_url","into","is_forge","new","schema","to_owned","try_from","try_into","type_id","Admin","InternalIssueTracker","None","Organization","Owner","Permission","Read","RepoTransfer","Repository","SearchResults","Team","Topics","User","Write","active","allow_merge_commits","allow_only_contributors_to_track_time","allow_rebase","allow_rebase_explicit","allow_squash_merge","archived","avatar_url","avatar_url","avatar_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_create_org_repo","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_url","created","created_at","data","default_branch","default_merge_style","description","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","doer","email","empty","enable_issue_dependencies","enable_time_tracker","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","followers_count","following_count","fork","forks_count","from","from","from","from","from","from","from","from","from","full_name","full_name","full_name","get_hash","get_hash","get_hash","has_issues","has_projects","has_pull_requests","has_wiki","hash","hash","hash","html_url","id","id","id","ignore_whitespace_conflicts","includes_all_repositories","internal","internal_tracker","into","into","into","into","into","into","into","into","into","is_admin","language","last_login","location","location","login","mirror","mirror_interval","mirror_updated","name","name","ok","open_issues_count","open_pr_counter","organization","original_url","owner","parent","permission","private","prohibit_login","recipient","release_counter","repo_admin_change_team_access","repo_transfer","restricted","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","ssh_url","starred_repos_count","stars_count","teams","template","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","units","units_map","updated_at","username","username","visibility","visibility","watchers_count","website","website","website"],"q":["gitea","","","","","","","","","","","","","","","","","","","","","gitea::schemad":["","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,20,0,20,0,20,0,20,0,0,0,0,0,0,20,15,16,17,16,16,16,16,15,16,19,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,21,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,16,15,16,14,16,16,15,16,19,21,14,15,16,17,18,19,20,21,22,18,15,16,17,17,14,15,16,17,18,19,20,21,22,15,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,15,15,16,16,14,15,16,17,18,19,20,21,22,15,16,19,15,19,20,16,16,16,16,15,19,20,16,15,19,21,16,21,16,16,14,15,16,17,18,19,20,21,22,15,15,15,15,19,15,16,16,16,16,21,14,16,16,21,16,16,16,21,16,15,18,16,19,16,15,14,15,16,17,18,19,20,21,22,16,16,15,16,18,16,14,15,16,17,18,19,20,21,22,22,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,21,21,16,15,19,15,19,16,15,16,19],"f":[0,[[]],[[]],0,[1,1],[[],[[4,[2,3]]]],[[]],[[1,5,5,5],[[7,[[4,[6]]]]]],[[1,1],8],[1,9],[[]],[1,10],0,[[]],[1,[[7,[[4,[6]]]]]],[[10,11],1],0,[[]],[[],12],[[],12],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],[[12,[14]]]],[[],[[12,[15]]]],[[],[[12,[16]]]],[[],[[12,[17]]]],[[],[[12,[18]]]],[[],[[12,[19]]]],[[],[[12,[20]]]],[[],[[12,[21]]]],[[],[[12,[22]]]],0,0,0,0,0,[[14,14],8],[[15,15],8],[[16,16],8],[[17,17],8],[[18,18],8],[[19,19],8],[[20,20],8],[[21,21],8],[[22,22],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[14,23],24],[[15,23],24],[[16,23],24],[[17,23],24],[[18,23],24],[[19,23],24],[[20,23],24],[[21,23],24],[[22,23],24],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],5],[[],5],[[],5],0,0,0,0,[15],[19],[20],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,12],[15,12],[16,12],[17,12],[18,12],[19,12],[20,12],[21,12],[22,12],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Gitea"],[8,"SCForge"],[3,"Global"],[3,"Box"],[15,"u64"],[8,"Future"],[3,"Pin"],[15,"bool"],[4,"ForgeImplementation"],[3,"Url"],[3,"Client"],[4,"Result"],[3,"TypeId"],[3,"SearchResults"],[3,"User"],[3,"Repository"],[3,"InternalIssueTracker"],[3,"RepoTransfer"],[3,"Organization"],[4,"Permission"],[3,"Team"],[3,"Topics"],[3,"Formatter"],[6,"Result"]]},\
"publiccodeyml":{"doc":"","t":[17,17,3,17,17,12,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,6,13,6,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["CONTENTS_DIR","INSTANCE_INFO_FILE","PccFederate","REPO_INFO_FILE","USER_INFO_FILE","base_dir","borrow","borrow_mut","clone","clone_into","create_dir_if_not_exists","create_forge_instance","create_repository","create_user","delete_forge_instance","delete_repository","delete_user","errors","forge_exists","from","get_content_path","get_instance_path","get_repo_path","get_user_path","import","into","latest_tar","new","repository_exists","rm_util","schema","tar","to_owned","try_from","try_into","type_id","user_exists","BoxDynError","DBError","FResult","FederateErorr","IOError","SerializationError","borrow","borrow_mut","fmt","fmt","from","from","from","from","into","provide","to_string","try_from","try_into","type_id","Contacts","Description","IntendedAudience","Legal","Maintenance","Repository","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contacts","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","documentation","from","from","from","from","from","from","from","intended_audience","into","into","into","into","into","into","is_based_on","is_none","landing_url","legal","license","long_description","m_type","name","name","publiccode_yml_version","repo_owner","scope","serialize","serialize","serialize","serialize","serialize","serialize","short_description","to_add_repository","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url"],"q":["publiccodeyml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","publiccodeyml::errors","","","","","","","","","","","","","","","","","","","","publiccodeyml::schema","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","utility method to create dir if not exists","create forge instance","add repository instance","create user instance","delete forge instance","delete repository","delete user","represents all the ways a trait can fail using this crate","check if a forge instance exists","Returns the argument unchanged.","","","","","import archive from another Starchart instance","Calls <code>U::from(self)</code>.","get latest tar ball","","check if a repository exists.","utility method to remove file/dir","","","","","","","check if an user exists.","Convenience type alias for grouping driver-specific errors","database errors","Generic result data structure","Error data structure grouping various error subtypes","IO Error","serialization error","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","global is_none, to skip_serializing_if","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,18,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,25,26,27,28,29,30,25,26,27,28,29,30,28,25,25,26,27,28,29,30,26,25,25,26,27,28,29,30,25,25,26,27,28,29,30,25,30,25,25,27,26,28,25,29,25,27,30,25,26,27,28,29,30,26,25,25,26,27,28,29,30,25,26,27,28,29,30,25,26,27,28,29,30,25],"f":[0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,2],[[5,[[4,[3]]]]]],[[1,6],[[5,[[4,[3]]]]]],[[1,7],[[5,[[4,[3]]]]]],[[1,8],[[5,[[4,[3]]]]]],[[1,9],[[5,[[4,[3]]]]]],[[1,10,10,9],[[5,[[4,[3]]]]]],[[1,10,9],[[5,[[4,[3]]]]]],0,[[1,9],[[5,[[4,[3]]]]]],[[]],[[1,11],[[13,[12]]]],[[1,9,11],[[13,[12]]]],[[1,10,10,9,11],[[13,[12]]]],[[1,10,9,11],[[13,[12]]]],[[1,9,14,4],[[5,[[4,[3]]]]]],[[]],[1,[[5,[[4,[3]]]]]],[15,[[13,[1]]]],[[1,10,10,9],[[5,[[4,[3]]]]]],[[1,2],[[5,[[4,[3]]]]]],0,[1,[[5,[[4,[3]]]]]],[[]],[[],16],[[],16],[[],17],[[1,10,9],[[5,[[4,[3]]]]]],0,0,0,0,0,0,[[]],[[]],[[18,19],20],[[18,19],20],[21,18],[22,18],[[]],[23,18],[[]],[24],[[],15],[[],16],[[],16],[[],17],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[16,[25]]]],[[],[[16,[26]]]],[[],[[16,[27]]]],[[],[[16,[28]]]],[[],[[16,[29]]]],[[],[[16,[30]]]],0,[[]],[7,25],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[30,11],0,0,0,0,0,0,0,0,0,0,[25,16],[26,16],[27,16],[28,16],[29,16],[30,16],0,[[25,11],7],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0],"p":[[3,"PccFederate"],[3,"Path"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"CreateForge"],[3,"AddRepository"],[3,"AddUser"],[3,"Url"],[15,"str"],[15,"bool"],[3,"PathBuf"],[6,"FResult"],[3,"Client"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"FederateErorr"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"DBError"],[3,"Error"],[3,"Demand"],[3,"Repository"],[3,"Description"],[3,"Legal"],[3,"Maintenance"],[3,"Contacts"],[3,"IntendedAudience"]]},\
"starchart":{"doc":"","t":[6,17,17,3,17,2,17,17,6,6,6,12,0,11,11,0,0,0,11,0,0,0,11,11,0,5,0,0,0,0,0,0,0,11,11,11,0,0,11,3,3,17,3,3,17,3,3,3,11,11,11,11,3,12,11,11,12,12,11,11,12,12,3,12,12,12,12,11,11,12,12,12,5,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,3,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,6,0,5,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,13,13,3,13,13,13,13,13,13,13,3,13,13,13,4,6,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,3,3,17,3,3,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,3,12,11,11,11,11,11,11,11,11,11,12,12,12,12,3,12,3,12,11,11,11,12,12,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,3,3,3,3,3,3,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,3,2,17,17,3,17,3,3,12,12,0,11,11,11,11,11,11,11,11,0,5,11,0,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,12,11,0,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,2,2,17,2,2,2,2,0,2,5,5,0,17,3,3,17,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,2,2,2,2,2,2,2,2,2,0,5,0,5,17,3,3,3,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,3,3,17,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,17,17,3,6,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,10,3,17,3,12,12,11,11,11,11,12,11,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,5,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,5,11,11,11,11,11,11,11,11,11,17,3,4,3,13,13,13,3,17,4,13,3,3,3,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,3,11,11,12,12,12,11,11,11,11,12,11,11,11,11,11,11,2,2,2,2,2,2,0,0,5,0,3,11,11,12,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,0,11,11,11,11,11,11,11,11,5,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11],"n":["ArcCtx","CACHE_AGE","DOMAIN","FILES","GIT_COMMIT_HASH","PAGES","PKG_NAME","VERSION","WebCtx","WebDB","WebFederate","__private_field","api","borrow","borrow_mut","counter","ctx","db","deref","dns","errors","federate","from","into","introduce","main","master","pages","routes","search","settings","spider","static_assets","try_from","try_into","type_id","utils","verify","vzip","Api","Introducer","LIMIT","LatestResp","MiniIndex","ROUTES","Search","SearchRepositoryReq","SearchRepositoryResp","borrow","borrow","borrow_mut","borrow_mut","forges","forges","from","from","get_latest","get_mini_index","into","into","introduce","introducer","lastest","latest","list","mini_index","query","register","register","repositories","repository","search","services","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AddSearch","Count","Counter","DeleteSearch","GetCurrentSearchCount","Stop","add_search","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decrement_search_by","deserialize","deserialize","duration","fmt","fmt","from","from","from","from","from","from","from","get_searches","handle","handle","handle","handle","into","into","into","into","into","into","search_threshold","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","CLIENT_TIMEOUT","Ctx","USER_AGENT","__private_field","bootstrap","borrow","borrow","borrow_mut","borrow_mut","client","client_federated_search","client_get_forges","client_get_introducions","client_get_mini_index","client_introduce_starchart","clone","clone_into","crawl","deref","from","from","import_forges","into","into","master","new","search_repository","settings","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BoxDB","sqlite","get_data","Configuration","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","equivalent","fmt","from","into","parse","rate","serialize","spidering","to_owned","try_from","try_into","type_id","vzip","ClosedForRegistration","DBError","DBErrorWrapper","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","ErrorToResponse","InternalServerError","NotAUrl","NotAnEmail","ServiceError","ServiceResult","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","eq","eq","error","error_response","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","provide","provide","serialize","source","source","status_code","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ArcFederate","get_federate","Api","Introducer","LIMIT","LatestResp","MiniIndex","ROUTES","Search","SearchRepositoryReq","SearchRepositoryResp","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","forges","from","from","from","from","from","from","from","from","from","get_latest","get_mini_index","get_mini_index","into","into","into","into","into","into","into","into","into","introduce","introducer","latest","list","list_introductions","mini_index","new_introduction","query","register","register","register","repositories","repository","search","serialize","serialize","serialize","serialize","serialize","serialize","services","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddCounter","AddCounterBuilder","AddCounterBuilderError","AddSearchMaster","CleanUp","GetSite","Master","RemoveCounter","Rename","RenameBuilder","RenameBuilderError","UninitializedField","UninitializedField","ValidationError","ValidationError","add_site","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","counter","counter","counter","create_empty","create_empty","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gc","get_site","handle","handle","handle","handle","handle","handle","id","id","id","into","into","into","into","into","into","into","into","into","into","into","name","name","name","new","provide","provide","rename","rename_to","rename_to","rename_to","rm_site","sites","started","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BASE","ERROR_KEY","FOOTER","Footer","PAGES","PAYLOAD_KEY","PUB_NAV","TEMPLATES","TITLE_KEY","TemplateFile","Templates","__private_field","admin_email","auth","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chart","ctx","deref","errors","from","from","from","from","get","get","get_template","git_hash","into","into","into","into","iter","iter","name","new","new","path","register","routes","serialize","services","settings","source_code","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","AUTH_ADD","AUTH_CHALLENGE","ERROR_KEY","PAGES","PAYLOAD_KEY","TITLE_KEY","TemplateFile","add","ctx","register_templates","services","verify","AUTH_ADD","AddChallenge","AddChallengePayload","TITLE","add_submit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","ctx","deserialize","eq","equivalent","fmt","from","from","from","from","get_add","hostname","into","into","into","into","new","page","register","register","render","serialize","services","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_error","AUTH_CHALLENGE","TITLE","VerifyChallenge","VerifyChallengePayload","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","ctx","deserialize","eq","equivalent","fmt","from","from","from","from","get_verify","hostname","into","into","into","into","new","page","register","register","render","serialize","services","submit_verify","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_error","ERROR_KEY","EXPLORE","PAGES","PAYLOAD_KEY","REPO_INFO","SEARCH_BAR","SEARCH_RESULTS","TITLE_KEY","TemplateFile","ctx","home","register_templates","search","services","EXPLORE","ExplorePage","ExplorePagePayload","OptionalPage","Page","REPO_INFO","SEARCH_BAR","TITLE","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","ctx","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","explore","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","new","next","next_page","page","page","page","prev","prev_page","register","render","repos","serialize","serialize","serialize","services","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_error","SEARCH_QUERY_KEY","SEARCH_RESULTS","SearchPage","SearchPagePayload","TITLE","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","ctx","default","deserialize","eq","equivalent","fmt","from","from","from","into","into","into","new","page","register","render","repos","search","serialize","services","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_error","CtxError","ERROR_KEY","ERROR_TEMPLATE","PageError","PageResult","ReadableError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","error","error_response","fmt","fmt","fmt","fmt","from","from","into","into","new","new","provide","readable","reason","register_templates","serialize","status_code","template","title","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_error","Auth","PAGES","Pages","add","auth","borrow","borrow","borrow_mut","borrow_mut","explore","explore_next","from","from","home","into","into","logout","new","new","search","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify_get","vzip","vzip","services","ROUTES","SearchRepositoryReq","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","eq","equivalent","fmt","from","from","into","into","query","register","search_repository","serialize","services","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CC0_LICENSE_TXT","Crawler","DBType","Database","Debug","Error","Info","Introducer","LICENSE_FILE","LogLevel","Postgres","Repository","Server","Settings","Sqlite","Trace","Warn","admin_email","allow_new_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_url","client_timeout","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","crawler","create_license_file","create_root_dir","database","database_type","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","domain","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_ip","into","into","into","into","into","into","into","into","introducer","ip","items_per_api_call","log","new","nodes","pool","port","proxy_has_tls","public_url","repository","root","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","set_log_level","set_source_code","source_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate","validate_args","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_before_next_api_call","Crawler","borrow","borrow_mut","ctx","db","federate","from","into","is_running","new","rx","shutdown","start","try_from","try_into","type_id","vzip","ASSETS","ASSETS","ASSETS","ASSETS","Assets","FileMap","filemap","routes","services","static_files","FileMap","borrow","borrow_mut","files","from","get","into","new","try_from","try_into","type_id","vzip","ASSETS","Assets","__private_field","borrow","borrow","borrow_mut","borrow_mut","css","default","deref","from","from","into","into","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Asset","assets","borrow","borrow","borrow_mut","borrow_mut","from","from","get","get","handle_assets","into","into","iter","iter","register","static_files","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CSS","__private_field","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","vzip","get_random","Challenge","TXTChallenge","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","get_challenge_txt_key","get_challenge_txt_key_prefix","into","into","key","key","new","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","url","value","value","verify_txt","vzip","vzip"],"q":["starchart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::counter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::ctx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::db","","starchart::db::sqlite","starchart::dns","","","","","","","","","","","","","","","","","","","","","starchart::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::federate","","starchart::introduce","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::master","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::auth","","","","","","","","","","","","starchart::pages::auth::add","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::auth::verify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::chart","","","","","","","","","","","","","","starchart::pages::chart::home","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::chart::search","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::routes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::routes","starchart::search","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::settingsstarchart::spider","","","","","","","","","","","","","","","","","starchart::static_assets","","","","","","","","","","starchart::static_assets::filemap","","","","","","","","","","","","starchart::static_assets::routes","","","","","","","","","","","","","","","","","","","","","","","starchart::static_assets::static_files","","","","","","","","","","","","","","","","","","","","","","","","","starchart::static_assets::static_files::assets","","","","","","","","","","","starchart::utils","starchart::verify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Embedded Master actor module that manages Counter actors","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Message to increment the search count returns difficulty …","","This struct represents the counter state and is used to …","Message to decrement the search count","Message to get the search count","Message to stop Counter","increments the search count by one","","","","","","","","","","","","","","","","","decrements the search count by specified count","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","get Counter’s current search_threshold","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","in seconds","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message to add an Counter actor to Master","Builder for <code>AddCounter</code>.","Error type for AddCounterBuilder","Message to add search to an Counter actor","Message to clean up master of Counter actors with zero …","Message to get an Counter actor from master","This Actor manages the Counter actors. A service can have …","Message to delete Counter actor","Message to rename an Counter actor","Builder for <code>Rename</code>.","Error type for RenameBuilder","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","add Counter actor to Master","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>AddCounter</code>.","Builds a new <code>Rename</code>.","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get Counter actor from Master","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","create new master accepts a <code>u64</code> to configure garbage …","","","renames Counter actor","","","","remvoes Counter actor from Master","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get an embedded file and its metadata.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterates over the file paths in the folder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Render template with error context","","","","Generic result data structure","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create new instance of PageError from a template and an …","","","","","","","","","","","","","","","","","","","","","Authentication routes","constant Pages instance","Top-level routes data structure for V1 AP1","login route","auth routes","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","home page","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","logout route","create new instance of Routes","create new instance of Authentication route","","","","","","","","","","verify route","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Top-level routes data structure for V1 AP1","","","","","","Authentication routes","create new instance of Routes","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get an embedded file and its metadata.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterates over the file paths in the folder.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","represents a DNS challenge","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","key of TXT record","","","","","","","","","","","","","url of the forge instance","value of TXT record","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,5,7,5,7,0,52,5,7,52,51,5,7,51,52,0,53,51,28,22,5,7,54,50,52,0,5,7,5,7,5,7,5,7,0,0,0,0,0,0,9,9,10,16,17,14,15,9,10,16,17,14,15,9,10,9,10,9,9,10,9,9,10,9,10,10,16,17,14,15,9,10,10,10,10,9,10,16,17,14,15,9,9,10,9,10,9,10,16,17,14,15,9,10,16,17,14,15,9,10,16,17,14,15,9,10,16,17,14,15,0,0,0,31,18,31,18,31,18,18,18,18,18,18,18,18,18,18,31,31,18,18,31,18,18,18,18,18,18,31,18,31,18,31,18,31,18,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,41,41,0,41,41,41,41,41,41,41,0,41,41,41,0,0,40,41,39,40,41,39,39,40,41,39,41,40,40,41,41,40,41,41,41,41,41,39,40,41,39,40,41,39,40,41,41,40,41,40,41,39,40,41,39,40,41,39,40,41,39,0,0,0,0,0,0,0,0,0,0,0,50,51,28,52,53,54,56,57,58,50,51,28,52,53,54,56,57,58,50,51,28,52,53,54,50,51,28,52,53,54,50,51,28,52,53,54,50,51,28,52,53,54,50,51,28,52,53,54,50,51,28,52,53,54,52,50,51,28,52,53,54,56,57,58,52,0,51,50,51,28,52,53,54,56,57,58,51,52,53,51,0,28,0,22,56,57,58,54,50,52,50,51,28,52,53,54,0,50,51,28,52,53,54,50,51,28,52,53,54,56,57,58,50,51,28,52,53,54,56,57,58,50,51,28,52,53,54,56,57,58,50,51,28,52,53,54,56,57,58,0,0,0,0,0,0,0,0,0,0,0,63,66,63,66,59,67,61,63,62,64,66,65,70,59,69,71,67,61,63,62,64,66,65,70,59,69,71,61,64,67,61,64,59,67,61,64,59,61,61,62,61,64,61,64,59,63,63,66,66,67,61,63,63,63,62,64,66,66,66,65,70,59,69,71,59,59,59,59,59,59,59,59,61,61,62,67,61,63,62,64,66,65,70,59,69,71,64,64,65,59,63,66,59,64,64,65,59,59,59,67,61,64,59,63,66,67,61,63,62,64,66,65,70,59,69,71,67,61,63,62,64,66,65,70,59,69,71,67,61,63,62,64,66,65,70,59,69,71,67,61,63,62,64,66,65,70,59,69,71,0,0,0,0,0,0,0,0,0,0,0,74,80,0,77,74,123,80,77,74,123,80,0,0,74,0,77,74,123,80,123,123,123,80,77,74,123,80,123,123,77,77,80,77,77,0,80,0,80,80,77,74,123,80,77,74,123,80,77,74,123,80,80,77,74,123,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,82,84,85,83,82,84,85,82,82,83,82,82,82,82,83,82,84,85,0,82,83,82,84,85,83,83,84,85,83,82,0,82,83,82,84,85,83,82,84,85,83,82,84,85,83,82,84,85,83,0,0,0,0,89,87,90,91,89,87,90,91,87,87,89,87,87,87,87,89,87,90,91,0,87,89,87,90,91,89,89,90,91,89,87,0,0,87,89,87,90,91,89,87,90,91,89,87,90,91,89,87,90,91,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,92,93,94,96,95,92,93,94,96,92,93,94,92,93,94,95,92,92,93,94,92,93,94,92,93,94,0,92,93,94,95,92,93,93,94,96,95,92,93,94,96,95,93,92,95,93,94,93,92,96,95,92,92,93,94,0,92,93,94,95,92,93,94,96,95,92,93,94,96,95,92,93,94,96,95,92,93,94,96,95,0,0,0,0,0,98,97,99,98,97,99,97,97,98,97,97,97,97,97,98,97,99,98,97,99,98,98,99,98,97,0,97,0,97,98,97,99,98,97,99,98,97,99,98,97,99,98,0,0,0,0,0,0,86,101,86,101,86,86,101,101,86,86,101,101,86,101,86,101,86,101,101,101,86,0,86,101,101,86,86,86,101,86,101,86,101,86,101,86,101,100,0,0,0,103,102,102,103,102,103,102,102,102,103,102,102,103,103,102,103,102,102,103,102,103,102,103,102,103,103,103,102,103,0,0,0,22,104,22,104,22,22,22,22,22,22,22,104,22,104,22,104,0,22,0,22,22,104,22,104,22,104,22,104,0,0,0,0,106,106,106,0,0,0,108,0,0,0,108,106,106,33,33,105,106,107,108,109,110,111,33,105,106,107,108,109,110,111,33,33,110,105,106,107,108,109,110,111,33,105,106,107,108,109,110,111,33,33,107,107,33,109,105,106,107,108,109,110,111,33,105,105,106,107,108,109,110,111,33,105,106,107,108,109,110,111,33,105,106,106,107,108,108,109,110,111,33,105,106,107,108,109,110,111,33,105,105,106,107,108,109,110,111,33,33,105,110,33,33,111,109,105,105,111,33,107,105,106,107,108,109,110,111,33,33,106,33,33,105,106,107,108,109,110,111,33,106,108,105,106,107,108,109,110,111,33,105,106,107,108,109,110,111,33,110,105,106,107,108,109,110,111,33,109,33,33,105,106,107,108,109,110,111,33,110,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,119,119,118,119,118,118,118,119,119,118,119,118,118,119,118,119,118,119,118,119,118,0,0,124,120,124,120,124,120,124,124,0,124,120,124,124,120,0,124,120,124,120,124,120,124,120,0,121,121,121,121,121,121,121,121,121,121,0,0,0,88,122,88,122,88,122,88,122,88,122,88,122,88,122,88,122,88,122,122,122,88,122,88,122,122,88,122,88,122,88,122,88,122,88,122,88,88,122,122,88,122],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,[1,2],0,0,0,[[]],[[]],0,[[]],0,0,0,0,0,0,0,[[],3],[[],3],[[],4],0,0,[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[]],[[]],0,0,[[]],[[]],0,0,0,0,0,0,0,[[5,6]],[[7,6]],0,0,0,[8],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],0,0,0,0,0,0,[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[10,10],[[]],[[]],[[9,11]],[[],[[3,[9]]]],[[],[[3,[10]]]],0,[[9,12],13],[[10,12],13],[[]],[9,10],[[]],[[]],[[]],[[]],[[]],[9,11],[[10,14]],[[10,15]],[[10,16]],[[10,17]],[[]],[[]],[[]],[[]],[[]],[[]],0,[9,3],[10,3],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[18,19],20],[[]],[[]],[[]],[[]],0,[[18,21,22],[[20,[[24,[23]]]]]],[[18,21,25],[[20,[[24,[26]]]]]],[[18,21,25],[[20,[[24,[27]]]]]],[[18,21],[[20,[28]]]],[[18,21],20],[18,18],[[]],[[18,21,29,30]],[31,32],[[]],[[]],[[18,21,19],20],[[]],[[]],0,[33,[[34,[18]]]],[[18,19,32],[[20,[[24,[23]]]]]],0,[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],0,0,[[[35,[33]]],29],0,[[]],[[]],[36,36],[[]],[[],36],[[],[[3,[36]]]],[[36,36],37],[[],37],[[36,12],13],[[]],[[]],[38,36],0,[36,3],0,[[]],[[],3],[[],3],[[],4],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[39]]]],[[40,40],37],[[41,41],37],0,[41,42],[[40,12],13],[[40,12],13],[[41,12],13],[[41,12],13],[[]],[43,41],[44,41],[[]],[45,41],[46,41],[[]],[[]],[[]],[[]],[47],[47],[39,3],[40,[[35,[48]]]],[41,[[35,[48]]]],[41,49],[[],32],[[],32],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[]],[[]],[[]],0,[[[35,[33]]],30],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[51,51],[28,28],[52,52],[53,53],[54,54],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[50]]]],[[],[[3,[51]]]],[[],[[3,[28]]]],[[],[[3,[52]]]],[[],[[3,[53]]]],[[],[[3,[54]]]],[[50,50],37],[[51,51],37],[[28,28],37],[[52,52],37],[[53,53],37],[[54,54],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[50,12],[[3,[55]]]],[[51,12],[[3,[55]]]],[[28,12],[[3,[55]]]],[[52,12],[[3,[55]]]],[[53,12],[[3,[55]]]],[[54,12],[[3,[55]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[56,6]],[[57,6]],[[58,6]],0,0,0,[50,3],[51,3],[28,3],[52,3],[53,3],[54,3],[8],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[59,[60,[10]],32]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,[[3,[62,63]]]],[64,[[3,[65,66]]]],[67,67],[61,61],[64,64],[59,59],[[]],[[]],[[]],[[]],[[61,10],61],0,0,[[],61],[[],64],[[],61],[[],64],[[],59],[[63,12],13],[[63,12],13],[[66,12],13],[[66,12],13],[[]],[[]],[68,63],[32,63],[[]],[[]],[[]],[68,66],[32,66],[[]],[[]],[[]],[[]],[[]],[[]],0,[[59,38],[[35,[[60,[10]]]]]],[[59,69]],[[59,65]],[[59,67]],[[59,62]],[[59,70]],[[59,71]],[[61,32],61],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[64,32],64],0,0,[72,59],[47],[47],[[59,65]],[[64,32],64],0,0,[[59,38],35],0,[59],[[]],[[]],[[]],[[]],[[],32],[[],32],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[33,73],[74,75],0,[[]],[[]],[[]],[[]],[38,[[35,[76]]]],[38,[[35,[76]]]],[77,[[35,[32]]]],0,[[]],[[]],[[]],[[]],[[],78],[[],79],0,[[38,38],77],[33,80],0,[[77,75],[[3,[81]]]],0,[80,3],[8],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[75],[8],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,82],[[]],0,[[],[[3,[82]]]],[[82,82],37],[[],37],[[82,12],13],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[33,[35,[82]]],83],[33,32],[[84,6]],[[85,6]],[83,32],[82,3],[8],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[83,86],32],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,87],[[]],0,[[],[[3,[87]]]],[[87,87],37],[[],37],[[87,12],13],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[33,88],89],[[33,88],32],[[90,6]],[[91,6]],[89,32],[87,3],[8],0,[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[89,86],32],0,0,0,0,0,0,0,0,0,0,0,[75],0,[8],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,92],[93,93],[94,94],[[]],[[]],[[]],0,[[],92],[[],[[3,[92]]]],[[],[[3,[93]]]],[[],[[3,[94]]]],[[92,92],37],[[93,93],37],[[94,94],37],[[],37],[[],37],[[],37],0,[[92,12],13],[[93,12],13],[[94,12],13],[[]],[[]],[94,93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,92],95],[93,11],0,[[33,92],32],0,0,[93,11],0,[[96,6]],[95,32],0,[92,3],[93,3],[94,3],[8],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[95,86],32],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[97,97],[[]],0,[[],97],[[],[[3,[97]]]],[[97,97],37],[[],37],[[97,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[33,97,[35,[38]]],98],[[33,97,[35,[38]]],32],[[99,6]],[98,32],0,0,[97,3],[8],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[98,86],32],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[86,86],[[]],0,[[[101,[100]]],42],[[86,12],13],[[86,12],13],[[101,12],13],[[101,12],13],[[]],[[]],[[]],[[]],[41,86],[[100,41],[[101,[100]]]],[47],0,0,[75],[86,3],[[[101,[100]]],49],0,0,[[]],[[],32],[[],32],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],[86,32],0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[102,11],32],[[]],[[]],0,[[]],[[]],0,[[],102],[[],103],0,[102,3],[103,3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,[[103,38],32],[[]],[[]],[8],0,0,[[]],[[]],[[]],[[]],[22,22],[[]],[[],[[3,[22]]]],[[22,22],37],[[],37],[[22,12],[[3,[55]]]],[[]],[[]],[[]],[[]],0,[[104,6]],0,[22,3],[8],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33],0,[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[107],[107],0,0,[[],[[3,[105]]]],[[],[[3,[106]]]],[[],[[3,[107]]]],[[],[[3,[108]]]],[[],[[3,[109]]]],[[],[[3,[110]]]],[[],[[3,[111]]]],[[],[[3,[33]]]],0,[[105,105],37],[[106,106],37],[[107,107],37],[[108,108],37],[[109,109],37],[[110,110],37],[[111,111],37],[[33,33],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[105,12],13],[[106,12],13],[[106,12],13],[[107,12],13],[[108,12],13],[[108,12],13],[[109,12],13],[[110,12],13],[[111,12],13],[[33,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[3,[33,112]]]],0,0,0,0,0,0,0,[105,3],[106,3],[107,3],[108,3],[109,3],[110,3],[111,3],[33,3],0,[106],[33],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],32],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[33,[[3,[46]]]],[33,[[3,[46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],0,0,0,[[]],[[]],[113,37],[[[114,[37]],115,29,30],[[34,[113]]]],0,[113,37],[[[34,[113]]],116],[[],3],[[],3],[[],4],[[]],0,0,0,0,0,0,0,0,[8],0,0,[[]],[[]],0,[[]],[[2,[117,[38]]],[[35,[38]]]],[[]],[[],2],[[],3],[[],3],[[],4],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[[],118],[119,118],[[]],[[]],[[]],[[]],[118,3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[38,[[35,[76]]]],[38,[[35,[76]]]],[38,42],[[]],[[]],[[],78],[[],79],[[120,6]],0,[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],0,0,[[]],[[]],[121,38],[[]],[[]],[[],3],[[],3],[[],4],[[]],[25,32],0,0,[[]],[[]],[[]],[[]],[88,88],[122,122],[[]],[[]],[[],[[3,[88]]]],[[],[[3,[122]]]],[[88,88],37],[[122,122],37],[[],37],[[],37],[[88,12],13],[[122,12],13],[[]],[[]],[[115,21],32],[115,32],[[]],[[]],0,0,[[115,21],122],[88,3],[122,3],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,[122,[[3,[37,[19,[48]]]]]],[[]],[[]]],"p":[[3,"FILES"],[3,"FileMap"],[4,"Result"],[3,"TypeId"],[3,"forges"],[3,"AppService"],[3,"lastest"],[3,"ServiceConfig"],[3,"Count"],[3,"Counter"],[15,"u32"],[3,"Formatter"],[6,"Result"],[3,"GetCurrentSearchCount"],[3,"Stop"],[3,"DeleteSearch"],[3,"AddSearch"],[3,"Ctx"],[3,"Box"],[6,"ServiceResult"],[3,"Url"],[3,"SearchRepositoryReq"],[3,"Repository"],[3,"Vec"],[15,"usize"],[3,"Forge"],[3,"Starchart"],[3,"MiniIndex"],[6,"BoxDB"],[6,"ArcFederate"],[3,"USER_AGENT"],[3,"String"],[3,"Settings"],[3,"Arc"],[4,"Option"],[3,"Configuration"],[15,"bool"],[15,"str"],[3,"ErrorToResponse"],[3,"DBErrorWrapper"],[4,"ServiceError"],[3,"HttpResponse"],[4,"ParseError"],[4,"MailboxError"],[4,"DBError"],[3,"ValidationErrors"],[3,"Demand"],[8,"Error"],[3,"StatusCode"],[3,"Search"],[3,"Introducer"],[3,"Api"],[3,"LatestResp"],[3,"SearchRepositoryResp"],[3,"Error"],[3,"get_mini_index"],[3,"list_introductions"],[3,"new_introduction"],[3,"Master"],[3,"Addr"],[3,"AddCounterBuilder"],[3,"AddCounter"],[4,"AddCounterBuilderError"],[3,"RenameBuilder"],[3,"Rename"],[4,"RenameBuilderError"],[3,"AddSearchMaster"],[3,"UninitializedFieldError"],[3,"GetSite"],[3,"RemoveCounter"],[3,"CleanUp"],[15,"u64"],[3,"Context"],[3,"TEMPLATES"],[3,"Tera"],[3,"EmbeddedFile"],[3,"TemplateFile"],[8,"Iterator"],[4,"Filenames"],[3,"Footer"],[3,"Error"],[3,"AddChallengePayload"],[3,"AddChallenge"],[3,"get_add"],[3,"add_submit"],[3,"ReadableError"],[3,"VerifyChallengePayload"],[3,"Challenge"],[3,"VerifyChallenge"],[3,"get_verify"],[3,"submit_verify"],[3,"ExplorePagePayload"],[3,"Page"],[3,"OptionalPage"],[3,"ExplorePage"],[3,"explore"],[3,"SearchPagePayload"],[3,"SearchPage"],[3,"search"],[8,"CtxError"],[3,"PageError"],[3,"Pages"],[3,"Auth"],[3,"search_repository"],[3,"Server"],[4,"LogLevel"],[3,"Repository"],[4,"DBType"],[3,"Database"],[3,"Crawler"],[3,"Introducer"],[4,"ConfigError"],[3,"Crawler"],[3,"Receiver"],[6,"ArcCtx"],[8,"Future"],[8,"AsRef"],[3,"Assets"],[3,"ASSETS"],[3,"static_files"],[3,"CSS"],[3,"TXTChallenge"],[3,"Templates"],[3,"Asset"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
