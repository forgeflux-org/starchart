var searchIndex = JSON.parse('{\
"db_core":{"doc":"<code>Starchart</code> database operations","t":[3,3,3,8,3,3,4,13,3,8,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,12,12,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,10,12,12,10,11,11,11,11,11,11,11,11,11,10,10,10,5,10,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,0,12,10,0,12,12,10,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,12,12,12,23,6,4,13,6,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,12,12,16,8,8,8,8,16,10,10,10,5,5],"n":["AddRepository","AddUser","Challenge","CloneSPDatabase","CreateForge","Forge","ForgeImplementation","Gitea","Repository","SCDatabase","User","add_user","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_db","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev","dns_challenge_exists","eq","eq","eq","eq","eq","eq","eq","eq","errors","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forge_exists","forge_type","forge_type","forge_type_exists","from","from","from","from","from","from","from","from","from_str","get_all_repositories","get_dns_challenge","get_forge","get_hostname","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_url","into","into","into","into","into","into","into","into","key","last_crawl_on","name","name","ne","ne","ne","ne","ne","ne","ne","ops","owner","ping","prelude","profile_photo","profile_photo","repository_exists","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tags","tags","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_exists","username","username","username","value","website","website","async_trait","BoxDynError","DBError","DBError","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","UnknownForgeType","borrow","borrow_mut","fmt","fmt","from","into","source","to_string","try_from","try_into","type_id","0","0","Conn","Connect","DBOps","GetConnection","Migrate","Pool","connect","get_conn","migrate","adding_forge_works","forge_type_exists_helper"],"q":["db_coredb_core::dev","db_core::errors","","","","","","","","","","","","","","","","","","","","","","","db_core::errors::DBError","","db_core::ops","","","","","","","","","db_core::tests",""],"d":["add new repository to database","add new user to database","represents a DNS challenge","Trait to clone SCDatabase","create a new forge on the database","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Gitea softare forge","repository","Starchart’s database requirements. To implement support …","user data","add new user to database","","","","","","","","","","","","","","","","","","","","","","","","","clone DB","","","","","","","","","create DNS challenge","create forge isntance","add new repository to database.","delete DNS challenge","delete forge isntance","delete repository","delete user","repository description, if any","repository description, if any","","","","","","","","","useful imports for supporting a new database","check if a DNS challenge exists","","","","","","","","","represents all the ways a trait can fail using this crate","","","","","","","","","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert str to ForgeImplementation","Get all repositories","get DNS challenge","get forge isntance data","Get hostname from URL Utility function for uniform …","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","key of TXT record","last crawl","repository name","repository name","","","","","","","","meta operations like migration and connecting to a database","repository owner","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","","","","","","","","","repository topic tags","repository topic tags","Test utilities","","","","","","","","","Convert ForgeImplementation to str","","","","","","","","","","","","","","","","","","","","","","","","","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","repository owner","value of TXT record","repository website, if any","repository website, if any","","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","forge instance type is unknown","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","Get database connection","database migrations","database specific pool-type","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type run migrations","adding forge works","test if all forge type implementations are loaded into DB"],"i":[0,0,0,0,0,0,0,1,0,0,0,2,3,4,5,6,7,8,9,1,3,4,5,6,7,8,9,1,3,4,5,6,7,8,9,1,10,3,4,5,6,7,8,9,1,2,2,2,2,2,2,2,6,8,3,4,5,6,7,8,9,1,0,2,3,4,5,6,7,8,9,1,0,3,4,5,6,7,8,9,1,2,3,7,2,3,4,5,6,7,8,9,1,1,2,2,2,0,2,3,4,5,6,7,8,9,4,5,6,8,3,4,5,6,7,8,9,1,9,7,6,8,3,4,5,6,7,8,9,0,6,2,0,4,5,2,3,4,5,6,7,8,9,1,6,8,0,3,4,5,6,7,8,9,1,1,3,4,5,6,7,8,9,1,3,4,5,6,7,8,9,1,3,4,5,6,7,8,9,1,2,4,5,8,9,6,8,0,0,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,14,0,0,0,0,15,15,14,16,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["createforge",3]],[[["",0]],["user",3]],[[["",0]],["adduser",3]],[[["",0]],["addrepository",3]],[[["",0]],["forge",3]],[[["",0]],["repository",3]],[[["",0]],["challenge",3]],[[["",0]],["forgeimplementation",4]],[[["",0]],["box",3,[["scdatabase",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3]],["bool",0]],[[["",0],["user",3]],["bool",0]],[[["",0],["adduser",3]],["bool",0]],[[["",0],["addrepository",3]],["bool",0]],[[["",0],["forge",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["challenge",3]],["bool",0]],[[["",0],["forgeimplementation",4]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["dbresult",6]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["",0],["createforge",3]],["bool",0]],[[["",0],["user",3]],["bool",0]],[[["",0],["adduser",3]],["bool",0]],[[["",0],["addrepository",3]],["bool",0]],[[["",0],["forge",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["challenge",3]],["bool",0]],null,null,[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["str",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3],["adduser",3],["adduser",3],["addrepository",3]]],[[["",0]]]],"p":[[4,"ForgeImplementation"],[8,"SCDatabase"],[3,"CreateForge"],[3,"User"],[3,"AddUser"],[3,"AddRepository"],[3,"Forge"],[3,"Repository"],[3,"Challenge"],[8,"CloneSPDatabase"],[4,"DBError"],[13,"UnknownForgeType"],[13,"DBError"],[8,"GetConnection"],[8,"Connect"],[8,"Migrate"]]},\
"db_sqlx_sqlite":{"doc":"","t":[12,3,4,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,3,3,3,3,6,6,3,3,8,8,13,13,13,13,16,16,8,8,3,3,4,4,13,13,8,8,6,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,3,4,4,8,8,13,13,13,8,8,13,16,16,13,13,13,3,3,13,8,8,13,13,13,13,3,3,13,10,10,11,23,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12,12,0,10,10,0,0,11,11,10,10,12,12,12,12,10,10,11,11,11,11,11,10,10,10,10,10,10,10,10,5,5,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,10,10,12,12,12,12,0,0,12,12,10,10,0,12,12,12,12,10,10,11,12,12,12,12,0,0,11,11,11,11,10,10,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,6,3,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,13,3,10,23,10,10,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,5,10,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,10,0,12,12,10,12,12,10,12,12,12,12,12,12,12,12,3,3,6,3,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,13,3,10,10,10,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,5,10,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,10,12,12,10,12,12,10,12,12,12,12,12,12,12,12,6,6,4,4,13,13,6,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,16,16,8,8,8,8,8,8,8,8,16,16,10,10,10,10,10,10,3,3,6,3,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,13,3,10,10,10,10,10,10,10,10,10,10,12,12,0,10,10,12,12,10,10,10,10,10,5,10,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,10,12,12,10,12,12,10,12,12,12,12,12,12,12,12,3,3,6,3,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,13,3,10,23,10,10,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,5,10,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,10,12,12,10,12,12,10,12,12,12,12,12,12,12,12,5,5,5,5,5,3,3,6,3,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,13,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,12,12,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,10,12,12,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,5,10,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,10,12,12,11,11,11,11,11,11,11,0,12,10,12,12,10,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,6,3,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,13,3,10,23,10,10,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,5,10,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,10,0,12,12,10,12,12,10,12,12,12,12,12,12,12,12,3,3,6,3,8,16,8,3,4,13,8,6,13,13,13,13,13,13,13,3,4,8,13,8,16,3,8,13,3,10,10,10,10,10,10,10,10,10,10,12,12,10,10,12,12,10,10,10,10,10,5,10,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,10,12,12,10,12,12,10,12,12,12,12,12,12,12,12,6,4,13,6,13,13,13,13,13,13,13,13,12,12,16,8,8,8,8,16,10,10,10,5,5],"n":["0","Conn","ConnectionOptions","Database","Existing","Fresh","Fresh","add_user","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_db","clone_into","connect","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","dev","dns_challenge_exists","errors","forge_exists","forge_type_exists","from","from","from","from","get_all_repositories","get_dns_challenge","get_forge","get_user","into","into","into","into","migrate","ping","pool","pool_options","prelude","repository_exists","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","url","user_exists","vzip","vzip","vzip","vzip","0","0","AddRepository","AddRepository","AddUser","AddUser","BoxDynError","BoxDynError","Challenge","Challenge","CloneSPDatabase","CloneSPDatabase","ColumnDecode","ColumnIndexOutOfBounds","ColumnNotFound","Configuration","Conn","Conn","Connect","Connect","CreateForge","CreateForge","DBError","DBError","DBError","DBError","DBOps","DBOps","DBResult","DBResult","Database","Decode","DuplicateChallengeHostname","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateChallengeText","DuplicateForgeType","DuplicateForgeType","DuplicateHostname","DuplicateHostname","DuplicateRepositoryLink","DuplicateRepositoryLink","DuplicateTopic","DuplicateTopic","DuplicateUserLink","DuplicateUserLink","Error","Forge","Forge","ForgeImplementation","ForgeImplementation","GetConnection","GetConnection","Gitea","Gitea","Io","Migrate","Migrate","Migrate","Pool","Pool","PoolClosed","PoolTimedOut","Protocol","Repository","Repository","RowNotFound","SCDatabase","SCDatabase","Tls","TypeNotFound","UnknownForgeType","UnknownForgeType","User","User","WorkerCrashed","add_user","add_user","as_database_error","async_trait","borrow","borrow_mut","clone_db","clone_db","connect","connect","create_dns_challenge","create_dns_challenge","create_forge_isntance","create_forge_isntance","create_repository","create_repository","delete_dns_challenge","delete_dns_challenge","delete_forge_instance","delete_forge_instance","delete_repository","delete_repository","delete_user","delete_user","description","description","description","description","dev","dns_challenge_exists","dns_challenge_exists","errors","errors","fmt","fmt","forge_exists","forge_exists","forge_type","forge_type","forge_type","forge_type","forge_type_exists","forge_type_exists","from","from","from","from","from","get_all_repositories","get_all_repositories","get_conn","get_conn","get_dns_challenge","get_dns_challenge","get_forge","get_forge","get_hostname","get_hostname","get_user","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_link","html_link","html_link","html_url","html_url","into","into_database_error","key","key","last_crawl_on","last_crawl_on","migrate","migrate","name","name","name","name","ops","ops","owner","owner","ping","ping","prelude","profile_photo","profile_photo","profile_photo","profile_photo","repository_exists","repository_exists","source","tags","tags","tags","tags","tests","tests","to_string","try_from","try_into","type_id","user_exists","user_exists","username","username","username","username","username","username","value","value","vzip","website","website","website","website","0","0","0","0","0","0","0","0","0","0","0","0","index","index","len","source","type_name","AddRepository","AddUser","BoxDynError","Challenge","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","UnknownForgeType","User","add_user","async_trait","clone_db","connect","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","description","description","dns_challenge_exists","forge_exists","forge_type","forge_type","forge_type_exists","get_all_repositories","get_conn","get_dns_challenge","get_forge","get_hostname","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_url","key","last_crawl_on","migrate","name","name","owner","ping","prelude","profile_photo","profile_photo","repository_exists","tags","tags","user_exists","username","username","username","value","website","website","0","0","AddRepository","AddUser","BoxDynError","Challenge","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","UnknownForgeType","User","add_user","clone_db","connect","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","description","description","dns_challenge_exists","forge_exists","forge_type","forge_type","forge_type_exists","get_all_repositories","get_conn","get_dns_challenge","get_forge","get_hostname","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_url","key","last_crawl_on","migrate","name","name","owner","ping","profile_photo","profile_photo","repository_exists","tags","tags","user_exists","username","username","username","value","website","website","0","0","BoxDynError","BoxDynError","DBError","DBError","DBError","DBError","DBResult","DBResult","DuplicateChallengeHostname","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateChallengeText","DuplicateForgeType","DuplicateForgeType","DuplicateHostname","DuplicateHostname","DuplicateRepositoryLink","DuplicateRepositoryLink","DuplicateTopic","DuplicateTopic","DuplicateUserLink","DuplicateUserLink","UnknownForgeType","UnknownForgeType","0","0","0","0","Conn","Conn","Connect","Connect","DBOps","DBOps","GetConnection","GetConnection","Migrate","Migrate","Pool","Pool","connect","connect","get_conn","get_conn","migrate","migrate","AddRepository","AddUser","BoxDynError","Challenge","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","UnknownForgeType","User","add_user","clone_db","connect","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","description","description","dev","dns_challenge_exists","forge_exists","forge_type","forge_type","forge_type_exists","get_all_repositories","get_conn","get_dns_challenge","get_forge","get_hostname","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_url","key","last_crawl_on","migrate","name","name","owner","ping","profile_photo","profile_photo","repository_exists","tags","tags","user_exists","username","username","username","value","website","website","0","0","AddRepository","AddUser","BoxDynError","Challenge","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","UnknownForgeType","User","add_user","async_trait","clone_db","connect","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","description","description","dns_challenge_exists","forge_exists","forge_type","forge_type","forge_type_exists","get_all_repositories","get_conn","get_dns_challenge","get_forge","get_hostname","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_url","key","last_crawl_on","migrate","name","name","owner","ping","profile_photo","profile_photo","repository_exists","tags","tags","user_exists","username","username","username","value","website","website","0","0","adding_forge_works","adding_forge_works","forge_type_exists_helper","forge_type_exists_helper","map_register_err","AddRepository","AddUser","BoxDynError","Challenge","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","UnknownForgeType","User","add_user","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_db","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev","dns_challenge_exists","eq","eq","eq","eq","eq","eq","eq","eq","errors","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forge_exists","forge_type","forge_type","forge_type_exists","from","from","from","from","from","from","from","from","from","from_str","get_all_repositories","get_conn","get_dns_challenge","get_forge","get_hostname","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_url","into","into","into","into","into","into","into","into","into","key","last_crawl_on","migrate","name","name","ne","ne","ne","ne","ne","ne","ne","ops","owner","ping","profile_photo","profile_photo","repository_exists","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","tags","tags","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_exists","username","username","username","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","website","website","0","0","AddRepository","AddUser","BoxDynError","Challenge","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","UnknownForgeType","User","add_user","async_trait","clone_db","connect","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","description","description","dns_challenge_exists","forge_exists","forge_type","forge_type","forge_type_exists","get_all_repositories","get_conn","get_dns_challenge","get_forge","get_hostname","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_url","key","last_crawl_on","migrate","name","name","owner","ping","prelude","profile_photo","profile_photo","repository_exists","tags","tags","user_exists","username","username","username","value","website","website","0","0","AddRepository","AddUser","BoxDynError","Challenge","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","Forge","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","Repository","SCDatabase","UnknownForgeType","User","add_user","clone_db","connect","create_dns_challenge","create_forge_isntance","create_repository","delete_dns_challenge","delete_forge_instance","delete_repository","delete_user","description","description","dns_challenge_exists","forge_exists","forge_type","forge_type","forge_type_exists","get_all_repositories","get_conn","get_dns_challenge","get_forge","get_hostname","get_user","hostname","hostname","hostname","hostname","hostname","hostname","hostname","html_link","html_link","html_link","html_url","key","last_crawl_on","migrate","name","name","owner","ping","profile_photo","profile_photo","repository_exists","tags","tags","user_exists","username","username","username","value","website","website","0","0","BoxDynError","DBError","DBError","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","UnknownForgeType","0","0","Conn","Connect","DBOps","GetConnection","Migrate","Pool","connect","get_conn","migrate","adding_forge_works","forge_type_exists_helper"],"q":["db_sqlx_sqlite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::ConnectionOptions","","db_sqlx_sqlite::devdb_sqlx_sqlite::dev::DBError","","","","db_sqlx_sqlite::dev::Error","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev::DBError","","db_sqlx_sqlite::dev::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev::prelude::DBError","","db_sqlx_sqlite::dev::errors","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::errors::DBError","","","","db_sqlx_sqlite::dev::ops","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude::DBError","","db_sqlx_sqlite::dev::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude::dev::DBError","","db_sqlx_sqlite::dev::tests","","","","db_sqlx_sqlite::errors","db_sqlx_sqlite::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::DBError","","db_sqlx_sqlite::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::dev::DBError","","db_sqlx_sqlite::prelude::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::dev::prelude::DBError","","db_sqlx_sqlite::prelude::errors","","","","","","","","","","","","db_sqlx_sqlite::prelude::errors::DBError","","db_sqlx_sqlite::prelude::ops","","","","","","","","","db_sqlx_sqlite::prelude::tests",""],"d":["","Use an existing database pool","Connect to databse","","existing connection","","fresh connection","add new user to database","","","","","","","","","","","","","create DNS challenge","create forge isntance DB","add new repository to database.","","delete forge isntance","delete repository","delete user","","","","check if a forge instance exists","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get all repositories","","get forge isntance data","get user data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","ping DB","","","","check if a repo exists.","","","","","","","","","","","","","","","check if an user exists. When hostname of a forge instace …","","","","","","","add new repository to database","add new repository to database","add new user to database","add new user to database","Convenience type alias for grouping driver-specific errors","Convenience type alias for grouping driver-specific errors","represents a DNS challenge","represents a DNS challenge","Trait to clone SCDatabase","Trait to clone SCDatabase","Error occurred while decoding a value from a specific …","Column index was out of bounds.","No column found for the given name.","Error occurred while parsing a connection string.","database connection type","database connection type","Create databse connection","Create databse connection","create a new forge on the database","create a new forge on the database","Error data structure grouping various error subtypes","Error data structure grouping various error subtypes","errors that are specific to a database implementation","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Database operations trait(migrations, pool creation and …","Generic result data structure","Generic result data structure","Error returned from the database.","Error occurred while decoding a value.","DNS challenge hostname is already taken","DNS challenge hostname is already taken","DNS challenge value is already taken","DNS challenge value is already taken","Forge Type is already taken","Forge Type is already taken","Hostname is already taken","Hostname is already taken","Repository link is already taken","Repository link is already taken","Topic is already taken","Topic is already taken","HTML link Type is already taken","HTML link Type is already taken","Represents all the ways a method can fail within SQLx.","data representing a forge instance","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Get database connection","Gitea softare forge","Gitea softare forge","Error communicating with the database backend.","database migrations","database migrations","","database specific pool-type","database specific pool-type","<code>Pool::close</code> was called while we were waiting in …","A <code>Pool::acquire</code> timed out due to connections not becoming …","Unexpected or invalid data encountered while communicating …","repository","repository","No rows returned by a query that expected to return at …","Starchart’s database requirements. To implement support …","Starchart’s database requirements. To implement support …","Error occurred while attempting to establish a TLS …","Type in query doesn’t exist. Likely due to typo or …","forge instance type is unknown","forge instance type is unknown","user data","user data","A background worker has crashed.","add new user to database","add new user to database","","","","","clone DB","clone DB","database specific error-type create connection pool","database specific error-type create connection pool","create DNS challenge","create DNS challenge","create forge isntance","create forge isntance","add new repository to database.","add new repository to database.","delete DNS challenge","delete DNS challenge","delete forge isntance","delete forge isntance","delete repository","delete repository","delete user","delete user","repository description, if any","repository description, if any","repository description, if any","repository description, if any","useful imports for supporting a new database","check if a DNS challenge exists","check if a DNS challenge exists","represents all the ways a trait can fail using this crate","represents all the ways a trait can fail using this crate","","","check if a forge instance exists","check if a forge instance exists","forge type: which software is the instance running?","forge type: which software is the instance running?","type of the forge","type of the forge","check if forge type exists","check if forge type exists","Returns the argument unchanged.","","","","","Get all repositories","Get all repositories","database specific error-type get connection from …","database specific error-type get connection from …","get DNS challenge","get DNS challenge","get forge isntance data","get forge isntance data","Get hostname from URL Utility function for uniform …","Get hostname from URL Utility function for uniform …","get user data","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","html link to the repository","html link to the repository","Calls <code>U::from(self)</code>.","","key of TXT record","key of TXT record","last crawl","last crawl","database specific error-type run migrations","database specific error-type run migrations","repository name","repository name","repository name","repository name","meta operations like migration and connecting to a database","meta operations like migration and connecting to a database","repository owner","repository owner","ping DB","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","check if a repository exists.","","repository topic tags","repository topic tags","repository topic tags","repository topic tags","Test utilities","Test utilities","","","","","check if an user exists. When hostname of a forge instace …","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","username of the user","username of the user","repository owner","repository owner","value of TXT record","value of TXT record","","repository website, if any","repository website, if any","repository website, if any","repository website, if any","","","","","","","","","","","","","","","","","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","represents a DNS challenge","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","forge instance type is unknown","user data","add new user to database","","clone DB","database specific error-type create connection pool","create DNS challenge","create forge isntance","add new repository to database.","delete DNS challenge","delete forge isntance","delete repository","delete user","repository description, if any","repository description, if any","check if a DNS challenge exists","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all repositories","database specific error-type get connection from …","get DNS challenge","get forge isntance data","Get hostname from URL Utility function for uniform …","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","key of TXT record","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","repository topic tags","repository topic tags","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","repository owner","value of TXT record","repository website, if any","repository website, if any","","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","represents a DNS challenge","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","forge instance type is unknown","user data","add new user to database","clone DB","database specific error-type create connection pool","create DNS challenge","create forge isntance","add new repository to database.","delete DNS challenge","delete forge isntance","delete repository","delete user","repository description, if any","repository description, if any","check if a DNS challenge exists","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all repositories","database specific error-type get connection from …","get DNS challenge","get forge isntance data","Get hostname from URL Utility function for uniform …","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","key of TXT record","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","repository topic tags","repository topic tags","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","repository owner","value of TXT record","repository website, if any","repository website, if any","","","Convenience type alias for grouping driver-specific errors","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","Error data structure grouping various error subtypes","errors that are specific to a database implementation","errors that are specific to a database implementation","Generic result data structure","Generic result data structure","DNS challenge hostname is already taken","DNS challenge hostname is already taken","DNS challenge value is already taken","DNS challenge value is already taken","Forge Type is already taken","Forge Type is already taken","Hostname is already taken","Hostname is already taken","Repository link is already taken","Repository link is already taken","Topic is already taken","Topic is already taken","HTML link Type is already taken","HTML link Type is already taken","forge instance type is unknown","forge instance type is unknown","","","","","database connection type","database connection type","Create databse connection","Create databse connection","Database operations trait(migrations, pool creation and …","Database operations trait(migrations, pool creation and …","Get database connection","Get database connection","database migrations","database migrations","database specific pool-type","database specific pool-type","database specific error-type create connection pool","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type get connection from …","database specific error-type run migrations","database specific error-type run migrations","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","represents a DNS challenge","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","forge instance type is unknown","user data","add new user to database","clone DB","database specific error-type create connection pool","create DNS challenge","create forge isntance","add new repository to database.","delete DNS challenge","delete forge isntance","delete repository","delete user","repository description, if any","repository description, if any","useful imports for supporting a new database","check if a DNS challenge exists","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all repositories","database specific error-type get connection from …","get DNS challenge","get forge isntance data","Get hostname from URL Utility function for uniform …","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","key of TXT record","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","repository topic tags","repository topic tags","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","repository owner","value of TXT record","repository website, if any","repository website, if any","","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","represents a DNS challenge","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","forge instance type is unknown","user data","add new user to database","","clone DB","database specific error-type create connection pool","create DNS challenge","create forge isntance","add new repository to database.","delete DNS challenge","delete forge isntance","delete repository","delete user","repository description, if any","repository description, if any","check if a DNS challenge exists","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all repositories","database specific error-type get connection from …","get DNS challenge","get forge isntance data","Get hostname from URL Utility function for uniform …","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","key of TXT record","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","repository topic tags","repository topic tags","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","repository owner","value of TXT record","repository website, if any","repository website, if any","","","adding forge works","adding forge works","test if all forge type implementations are loaded into DB","test if all forge type implementations are loaded into DB","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","represents a DNS challenge","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","forge instance type is unknown","user data","add new user to database","","","","","","","","","","","","","","","","","","","","","","","","","","","clone DB","","","","","","","","","database specific error-type create connection pool","create DNS challenge","create forge isntance","add new repository to database.","delete DNS challenge","delete forge isntance","delete repository","delete user","repository description, if any","repository description, if any","","","","","","","","","useful imports for supporting a new database","check if a DNS challenge exists","","","","","","","","","represents all the ways a trait can fail using this crate","","","","","","","","","","","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert str to ForgeImplementation","Get all repositories","database specific error-type get connection from …","get DNS challenge","get forge isntance data","Get hostname from URL Utility function for uniform …","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","key of TXT record","last crawl","database specific error-type run migrations","repository name","repository name","","","","","","","","meta operations like migration and connecting to a database","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","","","","","","","","","","repository topic tags","repository topic tags","Test utilities","","","","","","","","","Convert ForgeImplementation to str","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","repository owner","value of TXT record","","","","","","","","","","repository website, if any","repository website, if any","","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","represents a DNS challenge","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","forge instance type is unknown","user data","add new user to database","","clone DB","database specific error-type create connection pool","create DNS challenge","create forge isntance","add new repository to database.","delete DNS challenge","delete forge isntance","delete repository","delete user","repository description, if any","repository description, if any","check if a DNS challenge exists","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all repositories","database specific error-type get connection from …","get DNS challenge","get forge isntance data","Get hostname from URL Utility function for uniform …","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","key of TXT record","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","repository topic tags","repository topic tags","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","repository owner","value of TXT record","repository website, if any","repository website, if any","","","add new repository to database","add new user to database","Convenience type alias for grouping driver-specific errors","represents a DNS challenge","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","data representing a forge instance","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","repository","Starchart’s database requirements. To implement support …","forge instance type is unknown","user data","add new user to database","clone DB","database specific error-type create connection pool","create DNS challenge","create forge isntance","add new repository to database.","delete DNS challenge","delete forge isntance","delete repository","delete user","repository description, if any","repository description, if any","check if a DNS challenge exists","check if a forge instance exists","forge type: which software is the instance running?","type of the forge","check if forge type exists","Get all repositories","database specific error-type get connection from …","get DNS challenge","get forge isntance data","Get hostname from URL Utility function for uniform …","get user data","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge","hostname of the forge instance: with scheme but remove …","hostname of the forge instance","html link to the user profile","html link to the user profile","html link to the repository","html link to the repository","key of TXT record","last crawl","database specific error-type run migrations","repository name","repository name","repository owner","ping DB","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","check if a repository exists.","repository topic tags","repository topic tags","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","repository owner","value of TXT record","repository website, if any","repository website, if any","","","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","forge instance type is unknown","","","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","Get database connection","database migrations","database specific pool-type","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type run migrations","adding forge works","test if all forge type implementations are loaded into DB"],"i":[1,0,0,0,2,0,2,3,1,2,4,3,1,2,4,3,3,3,3,2,3,3,3,3,3,3,3,0,3,0,3,3,1,2,4,3,3,3,3,3,1,2,4,3,3,3,3,4,0,3,3,1,2,4,3,1,2,4,3,1,2,4,3,4,3,1,2,4,3,5,6,0,0,0,0,0,0,0,0,0,0,7,7,7,7,8,8,0,0,0,0,0,0,9,9,0,0,0,0,7,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,10,10,7,0,0,7,11,11,7,7,7,0,0,7,0,0,7,7,9,9,0,0,7,12,12,7,0,7,7,13,13,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,15,15,0,12,12,0,0,7,7,12,12,16,16,17,17,12,12,7,7,7,7,7,12,12,8,8,12,12,12,12,0,0,12,12,16,16,18,18,19,19,14,14,17,17,15,15,20,20,18,18,19,19,14,14,15,15,7,7,20,20,17,17,21,21,14,14,15,15,0,0,14,14,12,12,0,18,18,19,19,12,12,7,14,14,15,15,0,0,7,7,7,7,12,12,18,18,19,19,15,15,20,20,7,14,14,15,15,22,22,23,23,24,25,26,27,28,29,30,31,32,33,32,33,34,0,0,0,0,0,8,0,0,0,9,0,0,9,9,9,9,9,9,9,0,0,0,10,0,11,0,0,9,0,12,0,13,11,12,12,12,12,12,12,12,14,15,12,12,16,17,12,12,8,12,12,0,12,16,18,19,14,17,15,20,18,19,14,15,20,17,21,14,15,14,12,0,18,19,12,14,15,12,18,19,15,20,14,15,22,23,0,0,0,0,0,8,0,0,0,9,0,0,9,9,9,9,9,9,9,0,0,0,10,0,11,0,0,9,0,12,13,11,12,12,12,12,12,12,12,14,15,12,12,16,17,12,12,8,12,12,0,12,16,18,19,14,17,15,20,18,19,14,15,20,17,21,14,15,14,12,18,19,12,14,15,12,18,19,15,20,14,15,22,23,0,0,0,0,9,9,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,22,22,23,23,8,8,0,0,0,0,0,0,0,0,11,11,11,11,8,8,21,21,0,0,0,0,0,8,0,0,0,9,0,0,9,9,9,9,9,9,9,0,0,0,10,0,11,0,0,9,0,12,13,11,12,12,12,12,12,12,12,14,15,0,12,12,16,17,12,12,8,12,12,0,12,16,18,19,14,17,15,20,18,19,14,15,20,17,21,14,15,14,12,18,19,12,14,15,12,18,19,15,20,14,15,22,23,0,0,0,0,0,8,0,0,0,9,0,0,9,9,9,9,9,9,9,0,0,0,10,0,11,0,0,9,0,12,0,13,11,12,12,12,12,12,12,12,14,15,12,12,16,17,12,12,8,12,12,0,12,16,18,19,14,17,15,20,18,19,14,15,20,17,21,14,15,14,12,18,19,12,14,15,12,18,19,15,20,14,15,22,23,0,0,0,0,0,0,0,0,0,0,8,0,0,0,9,0,0,9,9,9,9,9,9,9,0,0,0,10,0,11,0,0,9,0,12,9,16,18,19,14,17,15,20,10,9,16,18,19,14,17,15,20,10,16,18,19,14,17,15,20,10,13,16,18,19,14,17,15,20,10,11,12,12,12,12,12,12,12,14,15,16,18,19,14,17,15,20,10,0,12,16,18,19,14,17,15,20,10,0,9,9,16,18,19,14,17,15,20,10,12,16,17,12,9,16,18,19,14,17,15,20,10,10,12,8,12,12,0,12,16,18,19,14,17,15,20,18,19,14,15,9,16,18,19,14,17,15,20,10,20,17,21,14,15,16,18,19,14,17,15,20,0,14,12,18,19,12,16,18,19,14,17,15,20,10,9,14,15,0,16,18,19,14,17,15,20,10,10,9,9,16,18,19,14,17,15,20,10,9,16,18,19,14,17,15,20,10,9,16,18,19,14,17,15,20,10,12,18,19,15,20,9,16,18,19,14,17,15,20,10,14,15,22,23,0,0,0,0,0,8,0,0,0,9,0,0,9,9,9,9,9,9,9,0,0,0,10,0,11,0,0,9,0,12,0,13,11,12,12,12,12,12,12,12,14,15,12,12,16,17,12,12,8,12,12,0,12,16,18,19,14,17,15,20,18,19,14,15,20,17,21,14,15,14,12,0,18,19,12,14,15,12,18,19,15,20,14,15,22,23,0,0,0,0,0,8,0,0,0,9,0,0,9,9,9,9,9,9,9,0,0,0,10,0,11,0,0,9,0,12,13,11,12,12,12,12,12,12,12,14,15,12,12,16,17,12,12,8,12,12,0,12,16,18,19,14,17,15,20,18,19,14,15,20,17,21,14,15,14,12,18,19,12,14,15,12,18,19,15,20,14,15,22,23,0,0,9,0,9,9,9,9,9,9,9,9,22,23,8,0,0,0,0,11,11,8,21,0,0],"f":[null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["database",3]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[["",0],["",0]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["option",4,[["databaseerror",8]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[]],[[["invaliddnsnameerror",3]],["error",4]],[[["error",3]],["error",4]],[[["migrateerror",4]],["error",4]],[[],["error",4]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["option",4,[["box",3,[["databaseerror",8],["global",3]]]]]],null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["option",4,[["error",8]]]],null,null,null,null,null,null,[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,[[["",0],["createforge",3],["adduser",3],["adduser",3],["addrepository",3]]],[[["",0],["createforge",3],["adduser",3],["adduser",3],["addrepository",3]]],[[["",0]]],[[["",0]]],[[["error",4]],["dberror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["createforge",3]],[[["",0]],["user",3]],[[["",0]],["adduser",3]],[[["",0]],["addrepository",3]],[[["",0]],["forge",3]],[[["",0]],["repository",3]],[[["",0]],["challenge",3]],[[["",0]],["forgeimplementation",4]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[],["result",4,[["createforge",3]]]],[[],["result",4,[["user",3]]]],[[],["result",4,[["adduser",3]]]],[[],["result",4,[["addrepository",3]]]],[[],["result",4,[["forge",3]]]],[[],["result",4,[["repository",3]]]],[[],["result",4,[["challenge",3]]]],[[],["result",4,[["forgeimplementation",4]]]],null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["bool",0]],[[["",0],["user",3]],["bool",0]],[[["",0],["adduser",3]],["bool",0]],[[["",0],["addrepository",3]],["bool",0]],[[["",0],["forge",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["challenge",3]],["bool",0]],[[["",0],["forgeimplementation",4]],["bool",0]],null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["forgeimplementation",4],["dberror",4]]]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["createforge",3]],["bool",0]],[[["",0],["user",3]],["bool",0]],[[["",0],["adduser",3]],["bool",0]],[[["",0],["addrepository",3]],["bool",0]],[[["",0],["forge",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["challenge",3]],["bool",0]],null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["option",4,[["error",8]]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["str",0]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["challenge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["u32",0],["u32",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3],["adduser",3],["adduser",3],["addrepository",3]]],[[["",0]]]],"p":[[3,"Conn"],[4,"ConnectionOptions"],[3,"Database"],[3,"Fresh"],[13,"Fresh"],[13,"Existing"],[4,"Error"],[8,"GetConnection"],[4,"DBError"],[4,"ForgeImplementation"],[8,"Connect"],[8,"SCDatabase"],[8,"CloneSPDatabase"],[3,"AddRepository"],[3,"Repository"],[3,"CreateForge"],[3,"Forge"],[3,"User"],[3,"AddUser"],[3,"Challenge"],[8,"Migrate"],[13,"UnknownForgeType"],[13,"DBError"],[13,"Configuration"],[13,"Database"],[13,"Io"],[13,"Tls"],[13,"Protocol"],[13,"ColumnNotFound"],[13,"Decode"],[13,"Migrate"],[13,"ColumnIndexOutOfBounds"],[13,"ColumnDecode"],[13,"TypeNotFound"]]},\
"federate_core":{"doc":"","t":[16,8,10,10,10,10,10,10,10,10,10,10,10,0,10,5],"n":["Error","Federate","create_dir_if_not_exists","create_forge_isntance","create_repository","create_user","delete_forge_instance","delete_repository","delete_user","forge_exists","repository_exists","rm_util","tar","tests","user_exists","adding_forge_works"],"q":["federate_core","","","","","","","","","","","","","","","federate_core::tests"],"d":["","","utility method to create dir if not exists","create forge isntance","add repository isntance","create user isntance","delete forge isntance","delete repository","delete user","check if a forge instance exists","check if a repository exists.","utility method to remove file/dir","publish results in tar ball","Test utilities","check if an user exists.","adding forge works"],"i":[1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0],"f":[null,null,[[["",0],["path",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["path",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3],["adduser",3],["addrepository",3]]]],"p":[[8,"Federate"]]},\
"forge_core":{"doc":"","t":[8,3,6,3,8,6,3,6,11,11,11,11,11,11,11,11,10,11,11,10,12,0,11,11,10,11,11,11,10,12,12,12,12,11,11,11,10,12,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,23,23],"n":["CloneSPForge","CrawlResp","Repositories","Repository","SCForge","Tags","User","UserMap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_forge","clone_into","clone_into","crawl","description","dev","fmt","fmt","forge_type","from","from","from","get_hostname","hostname","hostname","html_link","html_link","into","into","into","is_forge","name","owner","prelude","profile_photo","repos","tags","tags","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","username","users","website","async_trait","async_trait"],"q":["forge_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","forge_core::dev","forge_core::prelude"],"d":["Trait to clone SCForge","","","add new repository to database","","","","","","","","","","","","","clone Forge","","","","repository description, if any","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","html link to the repository","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","repository name","repository owner","","OPTIONAL: html link to the user’s profile photo","","","repository topic tags","","","","","","","","","","","","username of the user","","repository website, if any","",""],"i":[0,0,0,0,0,0,0,0,1,2,3,1,2,3,2,3,4,2,3,5,3,0,2,3,5,1,2,3,5,2,3,2,3,1,2,3,5,3,3,0,2,1,1,3,2,3,1,2,3,1,2,3,1,2,3,2,1,3,0,0],"f":[null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["user",3]],[[["",0]],["repository",3]],[[["",0]],["box",3,[["scforge",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["u64",0],["u64",0],["u64",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["forgeimplementation",4]],[[]],[[]],[[]],[[["",0]],["str",0]],null,null,null,null,[[]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null],"p":[[3,"CrawlResp"],[3,"User"],[3,"Repository"],[8,"CloneSPForge"],[8,"SCForge"]]},\
"gitea":{"doc":"","t":[3,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,0,11,11,11,11,13,3,13,3,13,4,13,3,3,3,3,3,3,13,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,12,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12],"n":["Gitea","borrow","borrow_mut","client","clone","clone_forge","clone_into","crawl","eq","forge_type","from","get_hostname","instance_url","into","is_forge","new","schema","to_owned","try_from","try_into","type_id","Admin","InternalIssueTracker","None","Organization","Owner","Permission","Read","RepoTransfer","Repository","SearchResults","Team","Topics","User","Write","active","allow_merge_commits","allow_only_contributors_to_track_time","allow_rebase","allow_rebase_explicit","allow_squash_merge","archived","avatar_url","avatar_url","avatar_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_create_org_repo","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_url","created","created_at","data","default_branch","default_merge_style","description","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","doer","email","empty","enable_issue_dependencies","enable_time_tracker","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","followers_count","following_count","fork","forks_count","from","from","from","from","from","from","from","from","from","full_name","full_name","full_name","get_hash","get_hash","get_hash","has_issues","has_projects","has_pull_requests","has_wiki","hash","hash","hash","html_url","id","id","id","ignore_whitespace_conflicts","includes_all_repositories","internal","internal_tracker","into","into","into","into","into","into","into","into","into","is_admin","language","last_login","location","location","login","mirror","mirror_interval","mirror_updated","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ok","open_issues_count","open_pr_counter","organization","original_url","owner","parent","permission","private","prohibit_login","recipient","release_counter","repo_admin_change_team_access","repo_transfer","restricted","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","ssh_url","starred_repos_count","stars_count","teams","template","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","units","units_map","updated_at","username","username","visibility","visibility","watchers_count","website","website","website"],"q":["gitea","","","","","","","","","","","","","","","","","","","","","gitea::schemad":["","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,2,0,2,0,2,0,2,0,0,0,0,0,0,2,3,4,5,4,4,4,4,3,4,6,7,3,4,5,8,6,2,9,10,7,3,4,5,8,6,2,9,10,9,7,3,4,5,8,6,2,9,10,7,3,4,5,8,6,2,9,10,4,3,4,7,4,4,3,4,6,9,7,3,4,5,8,6,2,9,10,8,3,4,5,5,7,3,4,5,8,6,2,9,10,3,7,3,4,5,8,6,2,9,10,3,3,4,4,7,3,4,5,8,6,2,9,10,3,4,6,3,6,2,4,4,4,4,3,6,2,4,3,6,9,4,9,4,4,7,3,4,5,8,6,2,9,10,3,3,3,3,6,3,4,4,4,4,9,7,3,4,5,8,6,9,10,7,4,4,9,4,4,4,9,4,3,8,4,6,4,3,7,3,4,5,8,6,2,9,10,4,4,3,4,8,4,7,3,4,5,8,6,2,9,10,10,7,3,4,5,8,6,2,9,10,7,3,4,5,8,6,2,9,10,7,3,4,5,8,6,2,9,10,9,9,4,3,6,3,6,4,3,4,6],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["gitea",3]],[[["",0]],["box",3,[["scforge",8],["global",3]]]],[[["",0],["",0]]],[[["",0],["u64",0],["u64",0],["u64",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["",0]],["bool",0]],[[["",0]],["forgeimplementation",4]],[[]],[[["",0]],["str",0]],null,[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["url",3],["client",3]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["searchresults",3]],[[["",0]],["user",3]],[[["",0]],["repository",3]],[[["",0]],["internalissuetracker",3]],[[["",0]],["repotransfer",3]],[[["",0]],["organization",3]],[[["",0]],["permission",4]],[[["",0]],["team",3]],[[["",0]],["topics",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[["",0],["searchresults",3]],["bool",0]],[[["",0],["user",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["internalissuetracker",3]],["bool",0]],[[["",0],["repotransfer",3]],["bool",0]],[[["",0],["organization",3]],["bool",0]],[[["",0],["permission",4]],["bool",0]],[[["",0],["team",3]],["bool",0]],[[["",0],["topics",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],null,null,null,null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["",0],["searchresults",3]],["bool",0]],[[["",0],["user",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["internalissuetracker",3]],["bool",0]],[[["",0],["repotransfer",3]],["bool",0]],[[["",0],["organization",3]],["bool",0]],[[["",0],["team",3]],["bool",0]],[[["",0],["topics",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"Gitea"],[4,"Permission"],[3,"User"],[3,"Repository"],[3,"InternalIssueTracker"],[3,"Organization"],[3,"SearchResults"],[3,"RepoTransfer"],[3,"Team"],[3,"Topics"]]},\
"publiccodeyml":{"doc":"","t":[17,17,3,17,17,12,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,6,13,6,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["CONTENTS_DIR","INSTANCE_INFO_FILE","PccFederate","REPO_INFO_FILE","USER_INFO_FILE","base_dir","borrow","borrow_mut","clone","clone_into","create_dir_if_not_exists","create_forge_isntance","create_repository","create_user","delete_forge_instance","delete_repository","delete_user","errors","forge_exists","from","get_content_path","get_instance_path","get_repo_path","get_user_path","into","new","repository_exists","rm_util","schema","tar","to_owned","try_from","try_into","type_id","user_exists","BoxDynError","DBError","FResult","FederateErorr","IOError","SerializationError","borrow","borrow_mut","fmt","fmt","from","from","from","from","into","to_string","try_from","try_into","type_id","0","0","0","Contacts","Description","Legal","Maintenance","Repository","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contacts","description","deserialize","deserialize","deserialize","deserialize","deserialize","documentation","from","from","from","from","from","from","into","into","into","into","into","is_based_on","is_none","landing_url","legal","license","long_description","m_type","name","name","publiccode_yml_version","serialize","serialize","serialize","serialize","serialize","short_description","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url"],"q":["publiccodeyml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","publiccodeyml::errors","","","","","","","","","","","","","","","","","","","publiccodeyml::errors::FederateErorr","","","publiccodeyml::schema","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","utility method to create dir if not exists","create forge isntance","add repository isntance","create user isntance","delete forge isntance","delete repository","delete user","represents all the ways a trait can fail using this crate","check if a forge instance exists","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","check if a repository exists.","utility method to remove file/dir","","","","","","","check if an user exists.","Convenience type alias for grouping driver-specific errors","database errors","Generic result data structure","Error data structure grouping various error subtypes","IO Error","serialization error","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","global is_none, to skip_serializing_if","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,4,5,0,0,0,0,0,6,7,8,9,10,6,7,8,9,10,9,6,6,7,8,9,10,7,6,6,7,8,9,10,6,7,8,9,10,6,8,6,6,8,7,9,6,10,6,6,7,8,9,10,7,6,7,8,9,10,6,7,8,9,10,6,7,8,9,10,6],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["pccfederate",3]],[[["",0],["",0]]],[[["",0],["path",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["addrepository",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["",0],["bool",0]]],[[["",0],["str",0],["bool",0]]],[[["",0],["str",0],["str",0],["str",0],["bool",0]]],[[["",0],["str",0],["str",0],["bool",0]]],[[]],[[["string",3]]],[[["",0],["str",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["path",3]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0],["str",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["dberror",4]]],[[["ioerror",3]]],[[["yamlerror",3]]],[[]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[["addrepository",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["bool",0]],null,null,null,null,null,null,null,null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[3,"PccFederate"],[4,"FederateErorr"],[13,"SerializationError"],[13,"DBError"],[13,"IOError"],[3,"Repository"],[3,"Description"],[3,"Legal"],[3,"Maintenance"],[3,"Contacts"]]},\
"starchart":{"doc":"","t":[6,17,17,3,17,17,17,6,6,6,12,11,11,0,0,11,0,0,0,11,11,5,0,0,0,0,0,11,11,11,0,0,11,17,3,3,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,6,0,5,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,13,13,3,13,13,13,13,13,13,13,3,13,13,13,4,6,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,6,5,17,17,17,3,17,17,3,17,3,3,12,12,0,11,11,11,11,11,11,11,11,0,5,11,0,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,12,11,0,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,17,0,5,5,0,17,3,3,17,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,3,3,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,0,5,5,17,3,3,3,3,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,17,17,3,6,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,10,3,17,3,12,12,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,17,3,4,3,13,13,13,17,4,13,3,3,3,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,0,0,5,0,3,11,11,12,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,0,11,11,11,11,11,11,11,11,5,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,5,17,3,17,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11],"n":["ArcCtx","CACHE_AGE","DOMAIN","FILES","GIT_COMMIT_HASH","PKG_NAME","VERSION","WebCtx","WebDB","WebFederate","__private_field","borrow","borrow_mut","ctx","db","deref","dns","errors","federate","from","into","main","pages","routes","settings","spider","static_assets","try_from","try_into","type_id","utils","verify","vzip","CLIENT_TIMEOUT","Ctx","USER_AGENT","__private_field","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","crawl","deref","from","from","into","into","new","settings","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BoxDB","sqlite","get_data","Configuration","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","from","into","ne","parse","rate","serialize","spidering","to_owned","try_from","try_into","type_id","vzip","0","ClosedForRegistration","DBError","DBErrorWrapper","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateForgeType","DuplicateHostname","DuplicateRepositoryLink","DuplicateTopic","DuplicateUserLink","ErrorToResponse","InternalServerError","NotAUrl","NotAnEmail","ServiceError","ServiceResult","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","eq","eq","error","error_response","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","ne","serialize","source","source","status_code","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","ArcFederate","get_federate","BASE","ERROR_KEY","FOOTER","Footer","PAYLOAD_KEY","PUB_NAV","TEMPLATES","TITLE_KEY","TemplateFile","Templates","__private_field","admin_email","auth","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chart","ctx","deref","errors","from","from","from","from","get","get","get_template","git_hash","into","into","into","into","iter","iter","name","new","new","path","register","routes","serialize","services","settings","source_code","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","ERROR_KEY","add","register_templates","services","verify","AUTH_ADD","AddChallenge","AddChallengePayload","TITLE","add_submit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","ctx","deserialize","eq","fmt","from","from","from","from","get_add","hostname","into","into","into","into","ne","new","page","register","register","render","serialize","services","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_error","AUTH_CHALLENGE","TITLE","VerifyChallenge","VerifyChallengePayload","_get_challenge","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","ctx","deserialize","eq","fmt","from","from","from","from","get_verify","hostname","into","into","into","into","ne","new","page","register","register","render","serialize","services","submit_verify","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_error","ERROR_KEY","home","register_templates","services","HOME","HomePage","HomePagePayload","OptionalPage","Page","REPO_INFO","TITLE","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","ctx","default","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","home","into","into","into","into","into","ne","ne","ne","new","next_page","page","page","page","prev_page","register","render","repos","serialize","serialize","serialize","services","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_error","CtxError","ERROR_KEY","ERROR_TEMPLATE","PageError","PageResult","ReadableError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","error","error_response","fmt","fmt","fmt","fmt","from","from","into","into","new","new","readable","reason","register_templates","serialize","status_code","template","title","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_error","Auth","PAGES","Pages","add","auth","borrow","borrow","borrow_mut","borrow_mut","from","from","home","home_next","into","into","logout","new","new","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify_get","vzip","vzip","services","CC0_LICENSE_TXT","Crawler","DBType","Database","Debug","Error","Info","LICENSE_FILE","LogLevel","Postgres","Repository","Server","Settings","Sqlite","Trace","Warn","admin_email","allow_new_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_url","client_timeout","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","crawler","create_license_file","create_root_dir","database","database_type","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","domain","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_url","get_ip","into","into","into","into","into","into","into","ip","items_per_api_call","log","ne","ne","ne","ne","ne","new","pool","port","proxy_has_tls","repository","root","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","set_log_level","set_source_code","source_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate","validate_args","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_before_next_api_call","filemap","routes","services","static_files","FileMap","borrow","borrow_mut","files","from","get","into","new","try_from","try_into","type_id","vzip","ASSETS","Assets","__private_field","borrow","borrow","borrow_mut","borrow_mut","css","deref","from","from","into","into","new","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Asset","assets","borrow","borrow","borrow_mut","borrow_mut","from","from","get","get","handle_assets","into","into","iter","iter","register","static_files","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CSS","__private_field","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","vzip","get_random","KEY_LEN","TXTChallenge","VALUES_LEN","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","get_challenge_txt_key","get_challenge_txt_key_prefix","into","key","ne","new","serialize","to_owned","try_from","try_into","type_id","value","verify_txt","vzip"],"q":["starchart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::ctx","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::db","","starchart::db::sqlite","starchart::dns","","","","","","","","","","","","","","","","","","","","","starchart::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::errors::ServiceError","starchart::federate","","starchart::pages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::auth","","","","","starchart::pages::auth::add","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::auth::verify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::chart","","","","starchart::pages::chart::home","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::pages::routes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::routes","starchart::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::static_assets","","","","starchart::static_assets::filemap","","","","","","","","","","","","starchart::static_assets::routes","","","","","","","","","","","","","","","","","","","","","","","starchart::static_assets::static_files","","","","","","","","","","","","","","","","","","","","","","","","","starchart::static_assets::static_files::assets","","","","","","","","","","","starchart::utils","starchart::verify","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","in seconds","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge Type is already taken","Hostname is already taken","Repository link is already taken","Topic is already taken","HTML link Type is already taken","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get an embedded file and its metadata.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates over the file paths in the folder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render template with error context","","","","Generic result data structure","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create new instance of PageError from a template and an …","","","","","","","","","","","","","","","","","","","","Authentication routes","constant Pages instance","Top-level routes data structure for V1 AP1","login route","auth routes","","","","","Returns the argument unchanged.","Returns the argument unchanged.","home page","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","logout route","create new instance of Routes","create new instance of Authentication route","","","","","","","","","verify route","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Top-level routes data structure for V1 AP1","","","","","","Authentication routes","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create new instance of Routes","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get an embedded file and its metadata.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates over the file paths in the folder.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,2,2,3,2,3,3,3,3,3,2,2,3,2,3,3,3,3,2,3,2,3,2,3,2,3,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,6,6,0,6,6,6,6,6,6,6,0,6,6,6,0,0,5,6,7,5,6,7,7,5,6,7,6,5,5,6,6,5,6,6,6,6,7,5,6,7,6,7,5,6,6,5,6,5,6,7,5,6,7,5,6,7,5,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,9,10,0,11,9,12,10,11,9,12,10,0,0,9,0,11,9,12,10,12,12,12,10,11,9,12,10,12,12,11,11,10,11,11,0,10,0,10,10,11,9,12,10,11,9,12,10,11,9,12,10,10,11,9,12,10,0,0,0,0,0,0,0,0,0,0,13,14,15,16,13,14,15,16,14,14,13,14,14,14,13,14,15,16,0,14,13,14,15,16,14,13,13,15,16,13,14,0,14,13,14,15,16,13,14,15,16,13,14,15,16,13,14,15,16,13,0,0,0,0,0,17,18,19,20,17,18,19,20,18,18,17,18,18,18,17,18,19,20,0,18,17,18,19,20,18,17,17,19,20,17,18,0,0,18,17,18,19,20,17,18,19,20,17,18,19,20,17,18,19,20,17,0,0,0,0,0,0,0,0,0,0,0,21,22,23,24,25,21,22,23,24,25,22,23,24,22,23,24,21,22,22,23,24,22,23,24,22,23,24,21,22,23,23,24,25,0,21,22,23,24,25,22,23,24,21,22,21,23,24,22,25,21,22,22,23,24,0,22,23,24,21,22,23,24,25,21,22,23,24,25,21,22,23,24,25,21,22,23,24,25,21,0,0,0,0,0,0,26,27,26,27,26,26,27,27,26,26,27,27,26,27,26,27,26,27,27,26,0,26,27,27,26,26,26,27,26,27,26,27,26,27,26,27,28,0,0,0,29,30,30,29,30,29,30,29,30,30,30,29,29,30,29,30,29,30,29,30,29,30,29,29,29,30,29,0,0,0,0,0,31,31,31,0,0,32,0,0,0,32,31,31,33,33,34,31,35,32,36,37,33,34,31,35,32,36,37,33,33,37,34,31,35,32,36,37,33,34,31,35,32,36,37,33,33,35,35,33,36,34,31,35,32,36,37,33,34,34,31,35,32,36,37,33,34,31,31,35,32,32,36,37,33,34,31,35,32,36,37,33,32,34,34,31,35,32,36,37,33,34,37,33,34,35,36,37,33,33,36,34,34,33,35,34,31,35,32,36,37,33,33,31,33,33,34,31,35,32,36,37,33,31,32,34,31,35,32,36,37,33,34,31,35,32,36,37,33,37,34,31,35,32,36,37,33,36,33,33,34,31,35,32,36,37,33,37,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,0,0,39,39,40,39,40,40,39,39,40,39,40,40,40,39,40,39,40,39,40,39,40,0,0,41,42,41,42,41,42,41,41,0,41,42,41,41,42,0,41,42,41,42,41,42,41,42,0,43,43,43,43,43,43,43,43,43,43,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["",0]],["filemap",3]],null,null,null,[[]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["ctx",3]],[[["",0],["",0]]],[[["",0],["str",0],["boxdb",6],["arcfederate",6]]],[[["",0]],["string",3]],[[]],[[]],[[]],[[]],[[["settings",3]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["option",4,[["settings",3]]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["configuration",3]],[[["",0],["",0]]],[[],["configuration",3]],[[],["result",4]],[[["",0],["configuration",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["configuration",3]],["bool",0]],[[["str",0]]],null,[[["",0]],["result",4]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["result",4]],[[["",0],["",0]],["bool",0]],[[["",0],["serviceerror",4]],["bool",0]],null,[[["",0]],["httpresponse",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["parseerror",4]],["serviceerror",4]],[[]],[[["validationerrors",3]],["serviceerror",4]],[[["dberror",4]],["serviceerror",4]],[[]],[[]],[[]],[[]],[[["",0],["serviceerror",4]],["bool",0]],[[["",0]],["result",4]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["statuscode",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,[[["option",4,[["settings",3]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["settings",3]],["context",3]],[[["",0]],["tera",3]],null,[[]],[[]],[[]],[[]],[[["str",0]],["option",4,[["embeddedfile",3]]]],[[["str",0]],["option",4,[["embeddedfile",3]]]],[[["templatefile",3]],["option",4,[["string",3]]]],null,[[]],[[]],[[]],[[]],[[],["filenames",4]],[[]],null,[[["str",0],["str",0]]],[[["settings",3]]],null,[[["",0],["tera",3]],["result",4,[["error",3]]]],null,[[["",0]],["result",4]],[[["serviceconfig",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,[[["tera",3]]],[[["serviceconfig",3]]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["addchallengepayload",3]],[[["",0],["",0]]],null,[[],["result",4]],[[["",0],["addchallengepayload",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["",0],["addchallengepayload",3]],["bool",0]],[[["settings",3],["option",4,[["addchallengepayload",3]]]]],[[["settings",3]],["string",3]],[[["appservice",3]]],[[["appservice",3]]],[[["",0]],["string",3]],[[["",0]],["result",4]],[[["serviceconfig",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[["",0],["readableerror",3]],["string",3]],null,null,null,null,[[["verifychallengepayload",3],["arcctx",6],["boxdb",6]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["verifychallengepayload",3]],[[["",0],["",0]]],null,[[],["result",4]],[[["",0],["verifychallengepayload",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["",0],["verifychallengepayload",3]],["bool",0]],[[["settings",3],["challenge",3]]],[[["settings",3],["challenge",3]],["string",3]],[[["appservice",3]]],[[["appservice",3]]],[[["",0]],["string",3]],[[["",0]],["result",4]],[[["serviceconfig",3]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[["",0],["readableerror",3]],["string",3]],null,null,[[["tera",3]]],[[["serviceconfig",3]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["homepagepayload",3]],[[["",0]],["page",3]],[[["",0]],["optionalpage",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["homepagepayload",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["homepagepayload",3]],["bool",0]],[[["",0],["page",3]],["bool",0]],[[["",0],["optionalpage",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["optionalpage",3]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["",0],["homepagepayload",3]],["bool",0]],[[["",0],["page",3]],["bool",0]],[[["",0],["optionalpage",3]],["bool",0]],[[["settings",3],["homepagepayload",3]]],null,[[["settings",3],["homepagepayload",3]],["string",3]],null,null,null,[[["appservice",3]]],[[["",0]],["string",3]],null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["serviceconfig",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[["",0],["readableerror",3]],["string",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["readableerror",3]],[[["",0],["",0]]],null,[[["",0]],["httpresponse",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["serviceerror",4]]],[[["serviceerror",4]]],null,null,[[["tera",3]]],[[["",0]],["result",4]],[[["",0]],["statuscode",3]],null,null,[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["",0],["readableerror",3]],["string",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,[[["",0],["u32",0]],["string",3]],[[]],[[]],null,[[],["pages",3]],[[],["auth",3]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["str",0]],["string",3]],[[]],[[]],[[["serviceconfig",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],null,[[["",0]],["server",3]],[[["",0]],["loglevel",4]],[[["",0]],["repository",3]],[[["",0]],["dbtype",4]],[[["",0]],["database",3]],[[["",0]],["crawler",3]],[[["",0]],["settings",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0]]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0],["server",3]],["bool",0]],[[["",0],["loglevel",4]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["dbtype",4]],["bool",0]],[[["",0],["database",3]],["bool",0]],[[["",0],["crawler",3]],["bool",0]],[[["",0],["settings",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["url",3]],["result",4,[["configerror",4]]]],[[["",0]],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["",0],["server",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["database",3]],["bool",0]],[[["",0],["crawler",3]],["bool",0]],[[["",0],["settings",3]],["bool",0]],[[],["result",4,[["configerror",4]]]],null,null,null,null,null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,[[["",0]]],[[["",0]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["result",4,[["validationerrors",3]]]],[[["",0]],["result",4,[["validationerrors",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["serviceconfig",3]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],[[["",0]],["option",4,[["str",0]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["assets",3]],[[]],[[]],[[]],[[]],[[],["assets",3]],[[["",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[["str",0]],["option",4,[["embeddedfile",3]]]],[[["str",0]],["option",4,[["embeddedfile",3]]]],[[["str",0]],["httpresponse",3]],[[]],[[]],[[],["filenames",4]],[[]],[[["appservice",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["str",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["usize",0]],["string",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["txtchallenge",3]],[[["",0],["",0]]],[[],["result",4]],[[["",0],["txtchallenge",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["arcctx",6],["str",0]],["string",3]],[[["arcctx",6]],["string",3]],[[]],null,[[["",0],["txtchallenge",3]],["bool",0]],[[["arcctx",6],["str",0]]],[[["",0]],["result",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[]]],"p":[[3,"FILES"],[3,"USER_AGENT"],[3,"Ctx"],[3,"Configuration"],[3,"DBErrorWrapper"],[4,"ServiceError"],[3,"ErrorToResponse"],[13,"DBError"],[3,"TEMPLATES"],[3,"Footer"],[3,"TemplateFile"],[3,"Templates"],[3,"AddChallenge"],[3,"AddChallengePayload"],[3,"get_add"],[3,"add_submit"],[3,"VerifyChallenge"],[3,"VerifyChallengePayload"],[3,"get_verify"],[3,"submit_verify"],[3,"HomePage"],[3,"HomePagePayload"],[3,"Page"],[3,"OptionalPage"],[3,"home"],[3,"ReadableError"],[3,"PageError"],[8,"CtxError"],[3,"Auth"],[3,"Pages"],[4,"LogLevel"],[4,"DBType"],[3,"Settings"],[3,"Server"],[3,"Repository"],[3,"Database"],[3,"Crawler"],[3,"FileMap"],[3,"ASSETS"],[3,"Assets"],[3,"Asset"],[3,"static_files"],[3,"CSS"],[3,"TXTChallenge"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};